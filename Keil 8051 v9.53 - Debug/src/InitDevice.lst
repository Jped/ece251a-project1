C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 00:31:39 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\pedoe\S
                    -implicityStudio\v4_workspace\EFM8BB3_PowerModes_2_2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEV
                    -EL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\pedoe\SimplicityStudi
                    -o\v4_workspace\EFM8BB3_PowerModes_2_2\inc;C:\Users\pedoe\SimplicityStudio\v4_workspace\EFM8BB3_PowerModes_2_2\inc\config
                    -;C:\Users\pedoe\SimplicityStudio\v4_workspace\EFM8BB3_PowerModes_2_2\inc\graphics;C:/SiliconLabs/SimplicityStudio/v4/dev
                    -eloper/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/
                    -v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//
                    -kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/commo
                    -n/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;C:/SiliconLabs/Simpl
                    -icityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/80
                    -51/v4.0.3//Device/EFM8BB3/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_d
                    -river/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PORTS_3_enter_DefaultMode_from_RESET();
  31   1              PBCFG_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER16_3_enter_DefaultMode_from_RESET();
  34   1              TIMER01_0_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              SPI_0_enter_DefaultMode_from_RESET();
  37   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  38   1              // Restore the SFRPAGE
  39   1              SFRPAGE = SFRPAGE_save;
  40   1              // [Config Calls]$
  41   1      
  42   1      }
  43          
  44          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  45   1              // $[WDTCN - Watchdog Timer Control]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 00:31:39 PAGE 2   

  46   1              SFRPAGE = 0x00;
  47   1              //Disable Watchdog with key sequence
  48   1              WDTCN = 0xDE; //First key
  49   1              WDTCN = 0xAD; //Second key
  50   1              // [WDTCN - Watchdog Timer Control]$
  51   1      
  52   1      }
  53          
  54          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
  55   1              // $[HFOSC1 Setup]
  56   1              // [HFOSC1 Setup]$
  57   1      
  58   1              // $[CLKSEL - Clock Select]
  59   1              /*
  60   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
  61   1               //     High Frequency Oscillator 0.)
  62   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
  63   1               //     selected clock source divided by 1.)
  64   1               */
  65   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  66   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
  67   1                      ;
  68   1              // [CLKSEL - Clock Select]$
  69   1      
  70   1      }
  71          
  72          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
  73   1              // $[SPI0CKR - SPI0 Clock Rate]
  74   1              /*
  75   1               // SPI0CKR (SPI0 Clock Rate) = 0x0B
  76   1               */
  77   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
  78   1              // [SPI0CKR - SPI0 Clock Rate]$
  79   1      
  80   1              // $[SPI0CFG - SPI0 Configuration]
  81   1              /*
  82   1               // MSTEN (Master Mode Enable) = MASTER_ENABLED (Enable master mode.
  83   1               //     Operate as a master.)
  84   1               */
  85   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
  86   1              // [SPI0CFG - SPI0 Configuration]$
  87   1      
  88   1              // $[SPI0PCF - SPI0 Pin Configuration]
  89   1              // [SPI0PCF - SPI0 Pin Configuration]$
  90   1      
  91   1              // $[SPI0CN0 - SPI0 Control]
  92   1              /*
  93   1               // SPIEN (SPI0 Enable) = ENABLED (Enable the SPI module.)
  94   1               // NSSMD (Slave Select Mode) = 3_WIRE (3-Wire Slave or 3-Wire Master
  95   1               //     Mode. NSS signal is not routed to a port pin.)
  96   1               */
  97   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
  98   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
  99   1              // [SPI0CN0 - SPI0 Control]$
 100   1      
 101   1      }
 102          
 103          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 104   1              // $[EIE1 - Extended Interrupt Enable 1]
 105   1              /*
 106   1               // EADC0 (ADC0 Conversion Complete Interrupt Enable) = DISABLED (Disable
 107   1               //     ADC0 Conversion Complete interrupt.)
 108   1               // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 00:31:39 PAGE 3   

 109   1               //     ADC0 Window Comparison interrupt.)
 110   1               // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 111   1               //     interrupts.)
 112   1               // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 113   1               //     interrupts.)
 114   1               // EMAT (Port Match Interrupts Enable) = ENABLED (Enable interrupt
 115   1               //     requests generated by a Port Match.)
 116   1               // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 117   1               //     (Disable all PCA0 interrupts.)
 118   1               // ESMB0 (SMBus (SMB0) Interrupt Enable) = DISABLED (Disable all SMB0
 119   1               //     interrupts.)
 120   1               // ET3 (Timer 3 Interrupt Enable) = ENABLED (Enable interrupt requests
 121   1               //     generated by the TF3L or TF3H flags.)
 122   1               */
 123   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 124   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 125   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 126   1              // [EIE1 - Extended Interrupt Enable 1]$
 127   1      
 128   1              // $[EIE2 - Extended Interrupt Enable 2]
 129   1              // [EIE2 - Extended Interrupt Enable 2]$
 130   1      
 131   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 132   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 133   1      
 134   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 135   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 136   1      
 137   1              // $[EIP2 - Extended Interrupt Priority 2]
 138   1              // [EIP2 - Extended Interrupt Priority 2]$
 139   1      
 140   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 141   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 142   1      
 143   1              // $[IE - Interrupt Enable]
 144   1              /*
 145   1               // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
 146   1               // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 147   1               //     interrupt 0.)
 148   1               // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 149   1               //     interrupt 1.)
 150   1               // ESPI0 (SPI0 Interrupt Enable) = ENABLED (Enable interrupt requests
 151   1               //     generated by SPI0.)
 152   1               // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 153   1               //     interrupt.)
 154   1               // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 155   1               //     interrupt.)
 156   1               // ET2 (Timer 2 Interrupt Enable) = ENABLED (Enable interrupt requests
 157   1               //     generated by the TF2L or TF2H flags.)
 158   1               // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 159   1               */
 160   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 161   1                              | IE_ESPI0__ENABLED | IE_ET0__ENABLED | IE_ET1__DISABLED
 162   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 163   1              // [IE - Interrupt Enable]$
 164   1      
 165   1              // $[IP - Interrupt Priority]
 166   1              // [IP - Interrupt Priority]$
 167   1      
 168   1              // $[IPH - Interrupt Priority High]
 169   1              // [IPH - Interrupt Priority High]$
 170   1      
 171   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 00:31:39 PAGE 4   

 172          
 173          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 174   1              // $[XBR2 - Port I/O Crossbar 2]
 175   1              /*
 176   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 177   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 178   1               //     mode).)
 179   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 180   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 181   1               //     pin.)
 182   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 183   1               //     at Port pin.)
 184   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 185   1               //     at Port pin.)
 186   1               */
 187   1              SFRPAGE = 0x00;
 188   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 189   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 190   1                              | XBR2_URT1CTSE__DISABLED;
 191   1              // [XBR2 - Port I/O Crossbar 2]$
 192   1      
 193   1              // $[PRTDRV - Port Drive Strength]
 194   1              // [PRTDRV - Port Drive Strength]$
 195   1      
 196   1              // $[XBR0 - Port I/O Crossbar 0]
 197   1              /*
 198   1               // URT0E (UART0 I/O Enable) = DISABLED (UART0 I/O unavailable at Port
 199   1               //     pin.)
 200   1               // SPI0E (SPI I/O Enable) = ENABLED (SPI I/O routed to Port pins. The SPI
 201   1               //     can be assigned either 3 or 4 GPIO pins.)
 202   1               // SMB0E (SMB0 I/O Enable) = DISABLED (SMBus 0 I/O unavailable at Port
 203   1               //     pins.)
 204   1               // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 205   1               //     pin.)
 206   1               // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 207   1               //     (Asynchronous CP0 unavailable at Port pin.)
 208   1               // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 209   1               //     pin.)
 210   1               // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 211   1               //     (Asynchronous CP1 unavailable at Port pin.)
 212   1               // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 213   1               //     pin.)
 214   1               */
 215   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 216   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 217   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 218   1              // [XBR0 - Port I/O Crossbar 0]$
 219   1      
 220   1              // $[XBR1 - Port I/O Crossbar 1]
 221   1              // [XBR1 - Port I/O Crossbar 1]$
 222   1      
 223   1      }
 224          
 225          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 226   1              // $[Timer Initialization]
 227   1              // Save Timer Configuration
 228   1              uint8_t TMR3CN0_TR3_save;
 229   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 230   1              // Stop Timer
 231   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 232   1              // [Timer Initialization]$
 233   1      
 234   1              // $[TMR3CN1 - Timer 3 Control 1]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 00:31:39 PAGE 5   

 235   1              // [TMR3CN1 - Timer 3 Control 1]$
 236   1      
 237   1              // $[TMR3CN0 - Timer 3 Control]
 238   1              // [TMR3CN0 - Timer 3 Control]$
 239   1      
 240   1              // $[TMR3H - Timer 3 High Byte]
 241   1              /*
 242   1               // TMR3H (Timer 3 High Byte) = 0xF8
 243   1               */
 244   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 245   1              // [TMR3H - Timer 3 High Byte]$
 246   1      
 247   1              // $[TMR3L - Timer 3 Low Byte]
 248   1              /*
 249   1               // TMR3L (Timer 3 Low Byte) = 0x06
 250   1               */
 251   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 252   1              // [TMR3L - Timer 3 Low Byte]$
 253   1      
 254   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 255   1              /*
 256   1               // TMR3RLH (Timer 3 Reload High Byte) = 0xF8
 257   1               */
 258   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 259   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 260   1      
 261   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 262   1              /*
 263   1               // TMR3RLL (Timer 3 Reload Low Byte) = 0x06
 264   1               */
 265   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 266   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 267   1      
 268   1              // $[TMR3CN0]
 269   1              /*
 270   1               // TR3 (Timer 3 Run Control) = RUN (Start Timer 3 running.)
 271   1               */
 272   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 273   1              // [TMR3CN0]$
 274   1      
 275   1              // $[Timer Restoration]
 276   1              // Restore Timer Configuration
 277   1              TMR3CN0 |= TMR3CN0_TR3_save;
 278   1              // [Timer Restoration]$
 279   1      
 280   1      }
 281          
 282          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 283   1              // $[Timer Initialization]
 284   1              //Save Timer Configuration
 285   1              TCON_TR0=0;
 286   1              TH0 = 00111000;
 287   1              TL0 = 10011110;
 288   1              //Setting timer low byte and high byte in order for timer 0 to overflow at 14494 which is 10hz  which is 
             -100ms,
 289   1              //once this interrupt occurs we want the flag to be flagged and then update the screen
 290   1              TCON_TR0=1;
 291   1      
 292   1      }
 293          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 294   1              // $[CKCON0 - Clock Control 0]
 295   1              CKCON0 = 0x2  | 0 | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 296   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 00:31:39 PAGE 6   

 297   1                              | CKCON0_T1M__SYSCLK;
 298   1      // here we are setting Timer 2 to use a prescaled sysclock. It is scaled down by 48
 299   1      //      effectivly making it run at .510416 MHz JP
 300   1      
 301   1      //Enabiling timer 0 interrupt JP
 302   1              TMOD = 0x1 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 303   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 304   1              // setting Timer one to mode one; aka 16 bits... JP
 305   1              TCON_TR0=1;
 306   1      
 307   1      }
 308          
 309          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 310   1              // $[P0 - Port 0 Pin Latch]
 311   1              // [P0 - Port 0 Pin Latch]$
 312   1      
 313   1              // $[P0MDOUT - Port 0 Output Mode]
 314   1              /*
 315   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
 316   1               //     drain.)
 317   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
 318   1               //     drain.)
 319   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
 320   1               //     drain.)
 321   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
 322   1               //     drain.)
 323   1               // B4 (Port 0 Bit 4 Output Mode) = OPEN_DRAIN (P0.4 output is open-
 324   1               //     drain.)
 325   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
 326   1               //     drain.)
 327   1               // B6 (Port 0 Bit 6 Output Mode) = PUSH_PULL (P0.6 output is push-pull.)
 328   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
 329   1               //     drain.)
 330   1               */
 331   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 332   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 333   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 334   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 335   1              // [P0MDOUT - Port 0 Output Mode]$
 336   1      
 337   1              // $[P0MDIN - Port 0 Input Mode]
 338   1              // [P0MDIN - Port 0 Input Mode]$
 339   1      
 340   1              // $[P0SKIP - Port 0 Skip]
 341   1              /*
 342   1               // B0 (Port 0 Bit 0 Skip) = SKIPPED (P0.0 pin is skipped by the
 343   1               //     crossbar.)
 344   1               // B1 (Port 0 Bit 1 Skip) = SKIPPED (P0.1 pin is skipped by the
 345   1               //     crossbar.)
 346   1               // B2 (Port 0 Bit 2 Skip) = SKIPPED (P0.2 pin is skipped by the
 347   1               //     crossbar.)
 348   1               // B3 (Port 0 Bit 3 Skip) = SKIPPED (P0.3 pin is skipped by the
 349   1               //     crossbar.)
 350   1               // B4 (Port 0 Bit 4 Skip) = SKIPPED (P0.4 pin is skipped by the
 351   1               //     crossbar.)
 352   1               // B5 (Port 0 Bit 5 Skip) = SKIPPED (P0.5 pin is skipped by the
 353   1               //     crossbar.)
 354   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 355   1               //     crossbar.)
 356   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 357   1               //     crossbar.)
 358   1               */
 359   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 00:31:39 PAGE 7   

 360   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 361   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 362   1              // [P0SKIP - Port 0 Skip]$
 363   1      
 364   1              // $[P0MASK - Port 0 Mask]
 365   1              /*
 366   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 367   1               //     ignored and will not cause a port mismatch event.)
 368   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 369   1               //     ignored and will not cause a port mismatch event.)
 370   1               // B2 (Port 0 Bit 2 Mask Value) = COMPARED (P0.2 pin logic value is
 371   1               //     compared to P0MAT.2.)
 372   1               // B3 (Port 0 Bit 3 Mask Value) = IGNORED (P0.3 pin logic value is
 373   1               //     ignored and will not cause a port mismatch event.)
 374   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 375   1               //     ignored and will not cause a port mismatch event.)
 376   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 377   1               //     ignored and will not cause a port mismatch event.)
 378   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 379   1               //     ignored and will not cause a port mismatch event.)
 380   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 381   1               //     ignored and will not cause a port mismatch event.)
 382   1               */
 383   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 384   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 385   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 386   1              // [P0MASK - Port 0 Mask]$
 387   1      
 388   1              // $[P0MAT - Port 0 Match]
 389   1              // [P0MAT - Port 0 Match]$
 390   1      
 391   1      }
 392          
 393          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 394   1              // $[P1 - Port 1 Pin Latch]
 395   1              // [P1 - Port 1 Pin Latch]$
 396   1      
 397   1              // $[P1MDOUT - Port 1 Output Mode]
 398   1              /*
 399   1               // B0 (Port 1 Bit 0 Output Mode) = PUSH_PULL (P1.0 output is push-pull.)
 400   1               // B1 (Port 1 Bit 1 Output Mode) = PUSH_PULL (P1.1 output is push-pull.)
 401   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 402   1               //     drain.)
 403   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 404   1               //     drain.)
 405   1               // B4 (Port 1 Bit 4 Output Mode) = OPEN_DRAIN (P1.4 output is open-
 406   1               //     drain.)
 407   1               // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
 408   1               //     drain.)
 409   1               // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 410   1               //     drain.)
 411   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 412   1               //     drain.)
 413   1               */
 414   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 415   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 416   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 417   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 418   1              // [P1MDOUT - Port 1 Output Mode]$
 419   1      
 420   1              // $[P1MDIN - Port 1 Input Mode]
 421   1              // [P1MDIN - Port 1 Input Mode]$
 422   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 00:31:39 PAGE 8   

 423   1              // $[P1SKIP - Port 1 Skip]
 424   1              /*
 425   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 426   1               //     crossbar.)
 427   1               // B1 (Port 1 Bit 1 Skip) = SKIPPED (P1.1 pin is skipped by the
 428   1               //     crossbar.)
 429   1               // B2 (Port 1 Bit 2 Skip) = SKIPPED (P1.2 pin is skipped by the
 430   1               //     crossbar.)
 431   1               // B3 (Port 1 Bit 3 Skip) = SKIPPED (P1.3 pin is skipped by the
 432   1               //     crossbar.)
 433   1               // B4 (Port 1 Bit 4 Skip) = SKIPPED (P1.4 pin is skipped by the
 434   1               //     crossbar.)
 435   1               // B5 (Port 1 Bit 5 Skip) = SKIPPED (P1.5 pin is skipped by the
 436   1               //     crossbar.)
 437   1               // B6 (Port 1 Bit 6 Skip) = SKIPPED (P1.6 pin is skipped by the
 438   1               //     crossbar.)
 439   1               // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
 440   1               //     crossbar.)
 441   1               */
 442   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 443   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 444   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 445   1              // [P1SKIP - Port 1 Skip]$
 446   1      
 447   1              // $[P1MASK - Port 1 Mask]
 448   1              // [P1MASK - Port 1 Mask]$
 449   1      
 450   1              // $[P1MAT - Port 1 Match]
 451   1              // [P1MAT - Port 1 Match]$
 452   1      
 453   1      }
 454          
 455          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 456   1              // $[P2 - Port 2 Pin Latch]
 457   1              // [P2 - Port 2 Pin Latch]$
 458   1      
 459   1              // $[P2MDOUT - Port 2 Output Mode]
 460   1              /*
 461   1               // B0 (Port 2 Bit 0 Output Mode) = OPEN_DRAIN (P2.0 output is open-
 462   1               //     drain.)
 463   1               // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 464   1               //     drain.)
 465   1               // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
 466   1               //     drain.)
 467   1               // B3 (Port 2 Bit 3 Output Mode) = OPEN_DRAIN (P2.3 output is open-
 468   1               //     drain.)
 469   1               // B4 (Port 2 Bit 4 Output Mode) = OPEN_DRAIN (P2.4 output is open-
 470   1               //     drain.)
 471   1               // B5 (Port 2 Bit 5 Output Mode) = OPEN_DRAIN (P2.5 output is open-
 472   1               //     drain.)
 473   1               // B6 (Port 2 Bit 6 Output Mode) = PUSH_PULL (P2.6 output is push-pull.)
 474   1               */
 475   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 476   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 477   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 478   1                              | P2MDOUT_B6__PUSH_PULL;
 479   1              // [P2MDOUT - Port 2 Output Mode]$
 480   1      
 481   1              // $[P2MDIN - Port 2 Input Mode]
 482   1              // [P2MDIN - Port 2 Input Mode]$
 483   1      
 484   1              // $[P2SKIP - Port 2 Skip]
 485   1              // [P2SKIP - Port 2 Skip]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 00:31:39 PAGE 9   

 486   1      
 487   1              // $[P2MASK - Port 2 Mask]
 488   1              // [P2MASK - Port 2 Mask]$
 489   1      
 490   1              // $[P2MAT - Port 2 Match]
 491   1              // [P2MAT - Port 2 Match]$
 492   1      
 493   1      }
 494          
 495          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 496   1              // $[P3 - Port 3 Pin Latch]
 497   1              // [P3 - Port 3 Pin Latch]$
 498   1      
 499   1              // $[P3MDOUT - Port 3 Output Mode]
 500   1              /*
 501   1               // B0 (Port 3 Bit 0 Output Mode) = OPEN_DRAIN (P3.0 output is open-
 502   1               //     drain.)
 503   1               // B1 (Port 3 Bit 1 Output Mode) = OPEN_DRAIN (P3.1 output is open-
 504   1               //     drain.)
 505   1               // B2 (Port 3 Bit 2 Output Mode) = OPEN_DRAIN (P3.2 output is open-
 506   1               //     drain.)
 507   1               // B3 (Port 3 Bit 3 Output Mode) = OPEN_DRAIN (P3.3 output is open-
 508   1               //     drain.)
 509   1               // B4 (Port 3 Bit 4 Output Mode) = PUSH_PULL (P3.4 output is push-pull.)
 510   1               // B7 (Port 3 Bit 7 Output Mode) = OPEN_DRAIN (P3.7 output is open-
 511   1               //     drain.)
 512   1               */
 513   1              SFRPAGE = 0x20;
 514   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 515   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN
 516   1                              | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B7__OPEN_DRAIN;
 517   1              // [P3MDOUT - Port 3 Output Mode]$
 518   1      
 519   1              // $[P3MDIN - Port 3 Input Mode]
 520   1              // [P3MDIN - Port 3 Input Mode]$
 521   1      
 522   1      }
 523          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    165    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
