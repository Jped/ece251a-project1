C51 COMPILER V9.53.0.0   EFM8BB3_UART_INTERRUPT                                            05/08/2017 18:53:39 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE EFM8BB3_UART_INTERRUPT
OBJECT MODULE PLACED IN .\src/EFM8BB3_UART_Interrupt.OBJ
COMPILER INVOKED BY: Z:\home\daniel\Downloads\SimplicityStudio_v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/
                    -daniel/SimplicityStudio/v4_workspace/joystickworks/src/EFM8BB3_UART_Interrupt.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE)
                    - WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/daniel/Simpli
                    -cityStudio/v4_workspace/joystickworks/inc;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.3/kits/com
                    -mon/drivers/efm8_joystick;/home/daniel/SimplicityStudio/v4_workspace/joystickworks/lib/bsp/efm8_memory_lcd/inc;/home/dan
                    -iel/SimplicityStudio/v4_workspace/joystickworks/lib/bsp/efm8_memory_lcd/inc/config;/home/daniel/SimplicityStudio/v4_work
                    -space/joystickworks/lib/bsp;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//Device/shared/si8051b
                    -ase;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//Device/EFM8BB3/inc;/home/daniel/Downloads/Sim
                    -plicityStudio_v4/developer/sdks/8051/v4.0.4//kits/common/drivers/efm8_retargetserial;/home/daniel/Downloads/SimplicitySt
                    -udio_v4/developer/sdks/8051/v4.0.4//kits/common/bsp;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.
                    -4//kits/EFM8BB3_SLSTK2022A/config;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//Device/EFM8BB3/
                    -peripheral_driver/inc;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//kits/common/drivers/efm8_me
                    -mory_lcd/inc;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//kits/common/drivers/efm8_memory_lcd/
                    -inc/graphics;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//kits/common/drivers/efm8_memory_lcd/
                    -inc/config;/home/daniel/SimplicityStudio/v4_workspace/uart2/lib/efm8bb3/peripheralDrivers/src;/home/daniel/SimplicityStu
                    -dio/v4_workspace/uart2working/lib/efm8bb3/peripheralDrivers/src) PRINT(.\src/EFM8BB3_UART_Interrupt.lst) COND PAGEWIDTH(
                    -120) PAGELENGTH(65) OBJECT(.\src/EFM8BB3_UART_Interrupt.OBJ)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // EFM8BB3_UART0_Interrupt.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2014 Silicon Laboratories, Inc.
   5          // http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   6          //
   7          // Program Description:
   8          //
   9          // This program demonstrates how to configure the EFM8BB3 to write to and
  10          // read from the UART0 interface. The program reads a word using the UART0
  11          // interrupt and outputs that word to the screen, with all characters in
  12          // uppercase.
  13          //
  14          // Resources:
  15          //   SYSCLK - 24.5 MHz HFOSC0 / 1
  16          //   UART0  - 115200 baud, 8-N-1
  17          //   Timer1 - UART0 clock source
  18          //   P0.4   - UART0 TX
  19          //   P0.5   - UART0 RX
  20          //   P2.2   - Board Controller enable
  21          //   P3.4   - Display enable
  22          //
  23          //-----------------------------------------------------------------------------
  24          // How To Test: EFM8BB3 STK
  25          //-----------------------------------------------------------------------------
  26          // 1) Place the switch in "AEM" mode.
  27          // 2) Connect the EFM8BB3 STK board to a PC using a mini USB cable.
  28          // 3) Compile and download code to the EFM8BB3 STK board.
  29          //    In Simplicity Studio IDE, select Run -> Debug from the menu bar,
  30          //    click the Debug button in the quick menu, or press F11.
  31          // 4) On the PC, open HyperTerminal (or any other terminal program) and connect
  32          //    to the JLink CDC UART Port at 115200 baud rate and 8-N-1.
  33          // 5) Run the code.
  34          //    In Simplicity Studio IDE, select Run -> Resume from the menu bar,
  35          //    click the Resume button in the quick menu, or press F8.
  36          // 6) Using a terminal program on the PC, input any number of lower-case
  37          //    characters, up to UART_BUFFERSIZE (default 64), followed by either
  38          //    a carriage return ('\r'), a newline character ('\n'), or a tilda ('~').
  39          //    The program will change the input characters to upper-case and output
  40          //    them over UART.
C51 COMPILER V9.53.0.0   EFM8BB3_UART_INTERRUPT                                            05/08/2017 18:53:39 PAGE 2   

  41          //
  42          // Target:         EFM8BB3
  43          // Tool chain:     Generic
  44          //
  45          // Release 0.1 (ST)
  46          //    - Initial Revision
  47          //    - 20 MAY 2015
  48          //
  49          
  50          //-----------------------------------------------------------------------------
  51          // Includes
  52          //-----------------------------------------------------------------------------
  53          #include <SI_EFM8BB3_Register_Enums.h>
  54          #include "retargetserial.h"
  55          #include "InitDevice.h"
  56          #include "draw.h"
  57          #include "tick.h"
  58          #include "bsp.h"
  59          #include "joystick.h"
  60          #include <stdio.h>
  61          #include <stdlib.h>
  62          #include <string.h>
  63          
  64          //-----------------------------------------------------------------------------
  65          // Pin Definitions
  66          //-----------------------------------------------------------------------------
  67          SI_SBIT (DISP_EN, SFR_P3, 4);          // Display Enable
  68          #define DISP_BC_DRIVEN   0             // 0 = Board Controller drives display
  69          #define DISP_EFM8_DRIVEN 1             // 1 = EFM8 drives display
  70          
  71          SI_SBIT (BC_EN, SFR_P2, 2);            // Board Controller Enable
  72          #define BC_DISCONNECTED 0              // 0 = Board Controller disconnected
  73                                                 //     to EFM8 UART pins
  74          #define BC_CONNECTED    1              // 1 = Board Controller connected
  75                                                 //     to EFM8 UART pins
  76          
  77          //-----------------------------------------------------------------------------
  78          // Global Variables
  79          //-----------------------------------------------------------------------------
  80          // Variables in Interrupts.c
  81          //extern uint8_t UART_Buffer_Size;
  82          //extern uint8_t TX_Ready;
  83          //extern uint8_t Byte;
  84          
  85          #define UART_BUFFERSIZE        64
  86          
  87          //-----------------------------------------------------------------------------
  88          // Global Variables
  89          //-----------------------------------------------------------------------------
  90          uint8_t UART_Buffer[UART_BUFFERSIZE];
  91          uint8_t UART_Buffer_Size = 0;
  92          uint8_t UART_Input_First = 0;
  93          uint8_t UART_Output_First = 0;
  94          uint8_t TX_Ready =1;
  95          uint8_t Byte = 0;
  96          int writeIt=0;
  97          char weBuff[30][17];
  98          int x=0;
  99          int y=0;
 100          int i=0;
 101          int j=0;
 102          int z=0;
 103          int d=0;
C51 COMPILER V9.53.0.0   EFM8BB3_UART_INTERRUPT                                            05/08/2017 18:53:39 PAGE 3   

 104          int write2=0;
 105          char stri[10];
 106          char stri2[16];
 107          int hex=0;
 108          //FILE * fp;
 109          //-----------------------------------------------------------------------------
 110          // UART0_ISR
 111          //-----------------------------------------------------------------------------
 112          //
 113          // UART0 ISR Content goes here. Remember to clear flag bits:
 114          // SCON0::RI (Receive Interrupt Flag)
 115          // SCON0::TI (Transmit Interrupt Flag)
 116          //
 117          // This routine is invoked whenever a character is entered or displayed on the
 118          // Hyperterminal.
 119          //
 120          //-----------------------------------------------------------------------------
 121          SI_INTERRUPT (UART0_ISR, UART0_IRQn)
 122          {
 123   1              //P1_B4=!P1_B4;
 124   1      
 125   1                 if (SCON0_RI == 1)
 126   1                 {
 127   2                    if( UART_Buffer_Size == 0)  {    // If new word is entered
 128   3                       UART_Input_First = 0;    }
 129   2      
 130   2      
 131   2                    Byte = SBUF0;
 132   2                                        // Read a character from UART
 133   2                    weBuff[y][x]= Byte;
 134   2                    writeIt=1;
 135   2                    SCON0_RI = 0;                          // Clear interrupt flag
 136   2                 }
 137   1      
 138   1      
 139   1      }
 140          
 141          
 142          
 143          
 144          
 145          
 146          
 147          void InputPlayer()
 148          {
 149   1          uint32_t mv;
 150   1          uint8_t dir;
 151   1      
 152   1          ADC0CN0_ADBUSY = 1;
 153   1          while (!ADC0CN0_ADINT);
 154   1          ADC0CN0_ADINT = 0;
 155   1      
 156   1          mv = ((uint32_t)ADC0) * 3300 / 1024;
 157   1      
 158   1          dir = JOYSTICK_convert_mv_to_direction(mv);
 159   1          // Move player left
 160   1          if (dir == JOYSTICK_N)
 161   1          {
 162   2              //DISP_Init();
 163   2             write2=1;
 164   2      
 165   2          }
 166   1          if (dir == JOYSTICK_W)
C51 COMPILER V9.53.0.0   EFM8BB3_UART_INTERRUPT                                            05/08/2017 18:53:39 PAGE 4   

 167   1          {
 168   2              //DISP_Init();
 169   2             hex=!hex;
 170   2      
 171   2          }
 172   1      }
 173          
 174          
 175          
 176          
 177          
 178          
 179          
 180          
 181          
 182          
 183          
 184          
 185          
 186          
 187          
 188          
 189          
 190          
 191          
 192          
 193          
 194          //-----------------------------------------------------------------------------
 195          // Main Routine
 196          //-----------------------------------------------------------------------------
 197          void main (void)
 198          {
 199   1              for (i=0;i<=17;i++){
 200   2                      for (j=0;j<30;j++){
 201   3                              weBuff[j][i]='\0';
 202   3                      }
 203   2              }
 204   1              enter_DefaultMode_from_RESET();
 205   1      
 206   1         DISP_EN = DISP_BC_DRIVEN;           // EFM8 does not drive display
 207   1      
 208   1         BC_EN = BC_DISCONNECTED;               // Board controller connected to EFM8
 209   1                                             // UART pins
 210   1      
 211   1         IE_EA = 1;
 212   1      
 213   1      
 214   1         DISP_Init();
 215   1         //fp = fopen("test.txt", "w");
 216   1         while(1)
 217   1         {
 218   2                 InputPlayer();
 219   2                 if (writeIt && !hex){
 220   3                         d=y;
 221   3                         DrawScreenText(weBuff[y], z*10);
 222   3                         x++;
 223   3                         writeIt=0;
 224   3                         if (x>=16){
 225   4                                x=0;
 226   4                                y++;
 227   4                                z++;
 228   4                                 if (z==12){
 229   5                                         DISP_ClearAll();
C51 COMPILER V9.53.0.0   EFM8BB3_UART_INTERRUPT                                            05/08/2017 18:53:39 PAGE 5   

 230   5                                         z=0;
 231   5                                 }
 232   4                         }
 233   3      
 234   3                 }
 235   2                 else if (writeIt && hex){
 236   3                         d=y;
 237   3      
 238   3                         sprintf(stri,"0x%04x",weBuff[y][x]);
 239   3                         DrawScreenText(stri, z*10);
 240   3                         z++;
 241   3                         x++;
 242   3                         writeIt=0;
 243   3                         if (x>=16){
 244   4                                x=0;
 245   4                                y++;
 246   4                                //z++;
 247   4                         }
 248   3                         if (z==12){
 249   4                                                         DISP_ClearAll();
 250   4                                                         z=0;
 251   4                                                 }
 252   3      
 253   3                 }
 254   2                 if (write2){
 255   3                         write2=0;
 256   3                         z=0;
 257   3                         DISP_ClearAll();
 258   3                         i=0;
 259   3                         //DrawScreenText("hellow world!! ", 0);
 260   3                         DrawScreenText(weBuff[0], 0);
 261   3                         DrawScreenText(weBuff[1], 10);
 262   3                         DrawScreenText(weBuff[2], 20);
 263   3                         DrawScreenText(weBuff[3], 30);
 264   3                         DrawScreenText(weBuff[4], 40);
 265   3                         DrawScreenText(weBuff[5], 50);
 266   3                         DrawScreenText(weBuff[7], 60);
 267   3                         DrawScreenText(weBuff[8], 80);
 268   3                         DrawScreenText(weBuff[9], 90);
 269   3                         DrawScreenText(weBuff[10], 100);
 270   3                         DrawScreenText(weBuff[11], 110);
 271   3                         DrawScreenText(weBuff[12], 120);
 272   3      
 273   3      
 274   3                 }
 275   2      
 276   2            // If the complete word has been entered via the terminal followed by
 277   2            // carriage return or newline
 278   2      
 279   2      //      if((TX_Ready == 1) && (UART_Buffer_Size != 0) && ((Byte == '\r') || (Byte == '\n') || (Byte == '~'
             -)))
 280   2      //      {
 281   2      //         TX_Ready = 0;                 // Set the flag to zero
 282   2      //         SCON0_TI = 1;                 // Set transmit flag to 1
 283   2      //      }
 284   2            TMR3CN0 &= ~TMR3CN0_TR3__BMASK;
 285   2            while (BSP_DISP_CS == SPI_CS_ASSERT_LVL);
 286   2            TMR3CN0 |= TMR3CN0_TR3__BMASK;
 287   2         }
 288   1         //fclose(fp);
 289   1      }
 290          
 291          
C51 COMPILER V9.53.0.0   EFM8BB3_UART_INTERRUPT                                            05/08/2017 18:53:39 PAGE 6   

 292          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    874    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =    623    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
