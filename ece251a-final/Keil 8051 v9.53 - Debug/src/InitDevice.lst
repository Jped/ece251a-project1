C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\home\daniel\Downloads\SimplicityStudio_v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/
                    -daniel/SimplicityStudio/v4_workspace/joystickworks/src/InitDevice.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVE
                    -L(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/daniel/SimplicityStudio/v
                    -4_workspace/joystickworks/inc;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.3/kits/common/drivers/
                    -efm8_joystick;/home/daniel/SimplicityStudio/v4_workspace/joystickworks/lib/bsp/efm8_memory_lcd/inc;/home/daniel/Simplici
                    -tyStudio/v4_workspace/joystickworks/lib/bsp/efm8_memory_lcd/inc/config;/home/daniel/SimplicityStudio/v4_workspace/joysti
                    -ckworks/lib/bsp;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//Device/shared/si8051base;/home/da
                    -niel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//Device/EFM8BB3/inc;/home/daniel/Downloads/SimplicityStudi
                    -o_v4/developer/sdks/8051/v4.0.4//kits/common/drivers/efm8_retargetserial;/home/daniel/Downloads/SimplicityStudio_v4/deve
                    -loper/sdks/8051/v4.0.4//kits/common/bsp;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//kits/EFM8
                    -BB3_SLSTK2022A/config;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//Device/EFM8BB3/peripheral_d
                    -river/inc;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//kits/common/drivers/efm8_memory_lcd/inc
                    -;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//kits/common/drivers/efm8_memory_lcd/inc/graphics
                    -;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.4//kits/common/drivers/efm8_memory_lcd/inc/config;/
                    -home/daniel/SimplicityStudio/v4_workspace/uart2/lib/efm8bb3/peripheralDrivers/src;/home/daniel/SimplicityStudio/v4_works
                    -pace/uart2working/lib/efm8bb3/peripheralDrivers/src) PRINT(.\src/InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJE
                    -CT(.\src/InitDevice.OBJ)

line level    source

   1          ////=========================================================
   2          //// src/InitDevice.c: generated by Hardware Configurator
   3          ////
   4          //// This file will be regenerated when saving a document.
   5          //// leave the sections inside the "$[...]" comment tags alone
   6          //// or they will be overwritten!
   7          ////=========================================================
   8          //
   9          //// USER INCLUDES
  10          //#include <SI_EFM8BB3_Register_Enums.h>
  11          //#include "InitDevice.h"
  12          //
  13          //// USER PROTOTYPES
  14          //// USER FUNCTIONS
  15          //
  16          //// $[Library Includes]
  17          //// [Library Includes]$
  18          //
  19          //
  20          ////==============================================================================
  21          //// enter_DefaultMode_from_RESET
  22          ////==============================================================================
  23          //extern void enter_DefaultMode_from_RESET(void) {
  24          //      // $[Config Calls]
  25          //      // Save the SFRPAGE
  26          //      uint8_t SFRPAGE_save = SFRPAGE;
  27          //      WDT_0_enter_DefaultMode_from_RESET();
  28          //      SPI_0_enter_DefaultMode_from_RESET();
  29          //      PORTS_0_enter_DefaultMode_from_RESET();
  30          //      PORTS_1_enter_DefaultMode_from_RESET();
  31          //      PORTS_2_enter_DefaultMode_from_RESET();
  32          //      PORTS_3_enter_DefaultMode_from_RESET();
  33          //      PBCFG_0_enter_DefaultMode_from_RESET();
  34          //      CLOCK_0_enter_DefaultMode_from_RESET();
  35          //      TIMER01_0_enter_DefaultMode_from_RESET();
  36          //      TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  37          //      TIMER16_3_enter_DefaultMode_from_RESET();
  38          //      UART_0_enter_DefaultMode_from_RESET();
  39          //      INTERRUPT_0_enter_DefaultMode_from_RESET();
  40          //      // Restore the SFRPAGE
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 2   

  41          //      SFRPAGE = SFRPAGE_save;
  42          //      // [Config Calls]$
  43          //
  44          //}
  45          //
  46          //
  47          //
  48          //extern void SPI_0_enter_DefaultMode_from_RESET(void) {
  49          //      // $[SPI0CKR - SPI0 Clock Rate]
  50          //      /*
  51          //       // SPI0CKR (SPI0 Clock Rate) = 0x0B
  52          //       */
  53          //      SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
  54          //      // [SPI0CKR - SPI0 Clock Rate]$
  55          //
  56          //      // $[SPI0CFG - SPI0 Configuration]
  57          //      /*
  58          //       // MSTEN (Master Mode Enable) = MASTER_ENABLED (Enable master mode.
  59          //       //     Operate as a master.)
  60          //       */
  61          //      SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
  62          //      // [SPI0CFG - SPI0 Configuration]$
  63          //
  64          //      // $[SPI0PCF - SPI0 Pin Configuration]
  65          //      // [SPI0PCF - SPI0 Pin Configuration]$
  66          //
  67          //      // $[SPI0CN0 - SPI0 Control]
  68          //      /*
  69          //       // SPIEN (SPI0 Enable) = ENABLED (Enable the SPI module.)
  70          //       // NSSMD (Slave Select Mode) = 3_WIRE (3-Wire Slave or 3-Wire Master
  71          //       //     Mode. NSS signal is not routed to a port pin.)
  72          //       */
  73          //      SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
  74          //      SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
  75          //      // [SPI0CN0 - SPI0 Control]$
  76          //}
  77          //
  78          //
  79          ////================================================================================
  80          //// WDT_0_enter_DefaultMode_from_RESET
  81          ////================================================================================
  82          //extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  83          //      // $[WDTCN - Watchdog Timer Control]
  84          //      SFRPAGE = 0x00;
  85          //      //Disable Watchdog with key sequence
  86          //      WDTCN = 0xDE; //First key
  87          //      WDTCN = 0xAD; //Second key
  88          //      // [WDTCN - Watchdog Timer Control]$
  89          //
  90          //}
  91          //
  92          ////================================================================================
  93          //// PORTS_0_enter_DefaultMode_from_RESET
  94          ////================================================================================
  95          //extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  96          //      // $[P0 - Port 0 Pin Latch]
  97          //      /*
  98          //       // B0 (Port 0 Bit 0 Latch) = HIGH (P0.0 is high. Set P0.0 to drive or
  99          //       //     float high.)
 100          //       // B1 (Port 0 Bit 1 Latch) = HIGH (P0.1 is high. Set P0.1 to drive or
 101          //       //     float high.)
 102          //       // B2 (Port 0 Bit 2 Latch) = HIGH (P0.2 is high. Set P0.2 to drive or
 103          //       //     float high.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 3   

 104          //       // B3 (Port 0 Bit 3 Latch) = HIGH (P0.3 is high. Set P0.3 to drive or
 105          //       //     float high.)
 106          //       // B4 (Port 0 Bit 4 Latch) = HIGH (P0.4 is high. Set P0.4 to drive or
 107          //       //     float high.)
 108          //       // B5 (Port 0 Bit 5 Latch) = HIGH (P0.5 is high. Set P0.5 to drive or
 109          //       //     float high.)
 110          //       // B6 (Port 0 Bit 6 Latch) = HIGH (P0.6 is high. Set P0.6 to drive or
 111          //       //     float high.)
 112          //       // B7 (Port 0 Bit 7 Latch) = HIGH (P0.7 is high. Set P0.7 to drive or
 113          //       //     float high.)
 114          //       */
 115          //      P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
 116          //                      | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
 117          //      // [P0 - Port 0 Pin Latch]$
 118          //
 119          //      // $[P0MDOUT - Port 0 Output Mode]
 120          //      /*
 121          //       // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
 122          //       //     drain.)
 123          //       // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
 124          //       //     drain.)
 125          //       // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
 126          //       //     drain.)
 127          //       // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
 128          //       //     drain.)
 129          //       // B4 (Port 0 Bit 4 Output Mode) = PUSH_PULL (P0.4 output is push-pull.)
 130          //       // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
 131          //       //     drain.)
 132          //       // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
 133          //       //     drain.)
 134          //       // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
 135          //       //     drain.)
 136          //       */
 137          //      P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 138          //                      | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 139          //                      | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__PUSH_PULL
 140          //                      | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 141          //      // [P0MDOUT - Port 0 Output Mode]$
 142          //
 143          //      // $[P0MDIN - Port 0 Input Mode]
 144          //      /*
 145          //       // B0 (Port 0 Bit 0 Input Mode) = DIGITAL (P0.0 pin is configured for
 146          //       //     digital mode.)
 147          //       // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
 148          //       //     digital mode.)
 149          //       // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
 150          //       //     digital mode.)
 151          //       // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
 152          //       //     digital mode.)
 153          //       // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
 154          //       //     digital mode.)
 155          //       // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
 156          //       //     digital mode.)
 157          //       // B6 (Port 0 Bit 6 Input Mode) = DIGITAL (P0.6 pin is configured for
 158          //       //     digital mode.)
 159          //       // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
 160          //       //     digital mode.)
 161          //       */
 162          //      P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 163          //                      | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 164          //                      | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 165          //      // [P0MDIN - Port 0 Input Mode]$
 166          //
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 4   

 167          //      // $[P0SKIP - Port 0 Skip]
 168          //      /*
 169          //       // B0 (Port 0 Bit 0 Skip) = NOT_SKIPPED (P0.0 pin is not skipped by the
 170          //       //     crossbar.)
 171          //       // B1 (Port 0 Bit 1 Skip) = NOT_SKIPPED (P0.1 pin is not skipped by the
 172          //       //     crossbar.)
 173          //       // B2 (Port 0 Bit 2 Skip) = NOT_SKIPPED (P0.2 pin is not skipped by the
 174          //       //     crossbar.)
 175          //       // B3 (Port 0 Bit 3 Skip) = NOT_SKIPPED (P0.3 pin is not skipped by the
 176          //       //     crossbar.)
 177          //       // B4 (Port 0 Bit 4 Skip) = NOT_SKIPPED (P0.4 pin is not skipped by the
 178          //       //     crossbar.)
 179          //       // B5 (Port 0 Bit 5 Skip) = NOT_SKIPPED (P0.5 pin is not skipped by the
 180          //       //     crossbar.)
 181          //       // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 182          //       //     crossbar.)
 183          //       // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 184          //       //     crossbar.)
 185          //       */
 186          //      P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 187          //                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__NOT_SKIPPED
 188          //                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 189          //      // [P0SKIP - Port 0 Skip]$
 190          //
 191          //      // $[P0MASK - Port 0 Mask]
 192          //      /*
 193          //       // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 194          //       //     ignored and will not cause a port mismatch event.)
 195          //       // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 196          //       //     ignored and will not cause a port mismatch event.)
 197          //       // B2 (Port 0 Bit 2 Mask Value) = IGNORED (P0.2 pin logic value is
 198          //       //     ignored and will not cause a port mismatch event.)
 199          //       // B3 (Port 0 Bit 3 Mask Value) = IGNORED (P0.3 pin logic value is
 200          //       //     ignored and will not cause a port mismatch event.)
 201          //       // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 202          //       //     ignored and will not cause a port mismatch event.)
 203          //       // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 204          //       //     ignored and will not cause a port mismatch event.)
 205          //       // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 206          //       //     ignored and will not cause a port mismatch event.)
 207          //       // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 208          //       //     ignored and will not cause a port mismatch event.)
 209          //       */
 210          //      P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__IGNORED
 211          //                      | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 212          //                      | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 213          //      // [P0MASK - Port 0 Mask]$
 214          //
 215          //      // $[P0MAT - Port 0 Match]
 216          //      /*
 217          //       // B0 (Port 0 Bit 0 Match Value) = HIGH (P0.0 pin logic value is compared
 218          //       //     with logic HIGH.)
 219          //       // B1 (Port 0 Bit 1 Match Value) = HIGH (P0.1 pin logic value is compared
 220          //       //     with logic HIGH.)
 221          //       // B2 (Port 0 Bit 2 Match Value) = HIGH (P0.2 pin logic value is compared
 222          //       //     with logic HIGH.)
 223          //       // B3 (Port 0 Bit 3 Match Value) = HIGH (P0.3 pin logic value is compared
 224          //       //     with logic HIGH.)
 225          //       // B4 (Port 0 Bit 4 Match Value) = HIGH (P0.4 pin logic value is compared
 226          //       //     with logic HIGH.)
 227          //       // B5 (Port 0 Bit 5 Match Value) = HIGH (P0.5 pin logic value is compared
 228          //       //     with logic HIGH.)
 229          //       // B6 (Port 0 Bit 6 Match Value) = HIGH (P0.6 pin logic value is compared
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 5   

 230          //       //     with logic HIGH.)
 231          //       // B7 (Port 0 Bit 7 Match Value) = HIGH (P0.7 pin logic value is compared
 232          //       //     with logic HIGH.)
 233          //       */
 234          //      P0MAT = P0MAT_B0__HIGH | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
 235          //                      | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
 236          //      // [P0MAT - Port 0 Match]$
 237          //
 238          //}
 239          //
 240          ////================================================================================
 241          //// PORTS_1_enter_DefaultMode_from_RESET
 242          ////================================================================================
 243          //extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 244          //      // $[P1 - Port 1 Pin Latch]
 245          //      /*
 246          //       // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
 247          //       //     float high.)
 248          //       // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
 249          //       //     float high.)
 250          //       // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
 251          //       //     float high.)
 252          //       // B3 (Port 1 Bit 3 Latch) = HIGH (P1.3 is high. Set P1.3 to drive or
 253          //       //     float high.)
 254          //       // B4 (Port 1 Bit 4 Latch) = HIGH (P1.4 is high. Set P1.4 to drive or
 255          //       //     float high.)
 256          //       // B5 (Port 1 Bit 5 Latch) = HIGH (P1.5 is high. Set P1.5 to drive or
 257          //       //     float high.)
 258          //       // B6 (Port 1 Bit 6 Latch) = HIGH (P1.6 is high. Set P1.6 to drive or
 259          //       //     float high.)
 260          //       // B7 (Port 1 Bit 7 Latch) = HIGH (P1.7 is high. Set P1.7 to drive or
 261          //       //     float high.)
 262          //       */
 263          //      P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
 264          //                      | P1_B5__HIGH | P1_B6__HIGH | P1_B7__HIGH;
 265          //      // [P1 - Port 1 Pin Latch]$
 266          //
 267          //      // $[P1MDOUT - Port 1 Output Mode]
 268          //      /*
 269          //       // B0 (Port 1 Bit 0 Output Mode) = OPEN_DRAIN (P1.0 output is open-
 270          //       //     drain.)
 271          //       // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
 272          //       //     drain.)
 273          //       // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 274          //       //     drain.)
 275          //       // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 276          //       //     drain.)
 277          //       // B4 (Port 1 Bit 4 Output Mode) = OPEN_DRAIN (P1.4 output is open-
 278          //       //     drain.)
 279          //       // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
 280          //       //     drain.)
 281          //       // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 282          //       //     drain.)
 283          //       // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 284          //       //     drain.)
 285          //       */
 286          //      P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 287          //                      | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 288          //                      | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 289          //                      | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 290          //      // [P1MDOUT - Port 1 Output Mode]$
 291          //
 292          //      // $[P1MDIN - Port 1 Input Mode]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 6   

 293          //      /*
 294          //       // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 295          //       //     digital mode.)
 296          //       // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 297          //       //     digital mode.)
 298          //       // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 299          //       //     digital mode.)
 300          //       // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
 301          //       //     digital mode.)
 302          //       // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 303          //       //     digital mode.)
 304          //       // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 305          //       //     digital mode.)
 306          //       // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
 307          //       //     digital mode.)
 308          //       // B7 (Port 1 Bit 7 Input Mode) = ANALOG (P1.7 pin is configured for
 309          //       //     analog mode.)
 310          //       */
 311          //      P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 312          //                      | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 313          //                      | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 314          //      // [P1MDIN - Port 1 Input Mode]$
 315          //
 316          //      // $[P1SKIP - Port 1 Skip]
 317          //      /*
 318          //       // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 319          //       //     crossbar.)
 320          //       // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 321          //       //     crossbar.)
 322          //       // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 323          //       //     crossbar.)
 324          //       // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 325          //       //     crossbar.)
 326          //       // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 327          //       //     crossbar.)
 328          //       // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 329          //       //     crossbar.)
 330          //       // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
 331          //       //     crossbar.)
 332          //       // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
 333          //       //     crossbar.)
 334          //       */
 335          ////    P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 336          ////                    | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 337          ////                    | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 338          ////                    | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__SKIPPED;
 339          //      P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 340          //                      | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 341          //                      | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 342          //      // [P1SKIP - Port 1 Skip]$
 343          //
 344          //      // $[P1MASK - Port 1 Mask]
 345          //      /*
 346          //       // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
 347          //       //     ignored and will not cause a port mismatch event.)
 348          //       // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
 349          //       //     ignored and will not cause a port mismatch event.)
 350          //       // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
 351          //       //     ignored and will not cause a port mismatch event.)
 352          //       // B3 (Port 1 Bit 3 Mask Value) = IGNORED (P1.3 pin logic value is
 353          //       //     ignored and will not cause a port mismatch event.)
 354          //       // B4 (Port 1 Bit 4 Mask Value) = IGNORED (P1.4 pin logic value is
 355          //       //     ignored and will not cause a port mismatch event.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 7   

 356          //       // B5 (Port 1 Bit 5 Mask Value) = IGNORED (P1.5 pin logic value is
 357          //       //     ignored and will not cause a port mismatch event.)
 358          //       // B6 (Port 1 Bit 6 Mask Value) = IGNORED (P1.6 pin logic value is
 359          //       //     ignored and will not cause a port mismatch event.)
 360          //       // B7 (Port 1 Bit 7 Mask Value) = IGNORED (P1.7 pin logic value is
 361          //       //     ignored and will not cause a port mismatch event.)
 362          //       */
 363          //      P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED
 364          //                      | P1MASK_B3__IGNORED | P1MASK_B4__IGNORED | P1MASK_B5__IGNORED
 365          //                      | P1MASK_B6__IGNORED | P1MASK_B7__IGNORED;
 366          //      // [P1MASK - Port 1 Mask]$
 367          //
 368          //      // $[P1MAT - Port 1 Match]
 369          //      /*
 370          //       // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
 371          //       //     with logic HIGH.)
 372          //       // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
 373          //       //     with logic HIGH.)
 374          //       // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
 375          //       //     with logic HIGH.)
 376          //       // B3 (Port 1 Bit 3 Match Value) = HIGH (P1.3 pin logic value is compared
 377          //       //     with logic HIGH.)
 378          //       // B4 (Port 1 Bit 4 Match Value) = HIGH (P1.4 pin logic value is compared
 379          //       //     with logic HIGH.)
 380          //       // B5 (Port 1 Bit 5 Match Value) = HIGH (P1.5 pin logic value is compared
 381          //       //     with logic HIGH.)
 382          //       // B6 (Port 1 Bit 6 Match Value) = HIGH (P1.6 pin logic value is compared
 383          //       //     with logic HIGH.)
 384          //       // B7 (Port 1 Bit 7 Match Value) = HIGH (P1.7 pin logic value is compared
 385          //       //     with logic HIGH.)
 386          //       */
 387          //      P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
 388          //                      | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH | P1MAT_B7__HIGH;
 389          //      // [P1MAT - Port 1 Match]$
 390          //
 391          //}
 392          //
 393          ////================================================================================
 394          //// PORTS_2_enter_DefaultMode_from_RESET
 395          ////================================================================================
 396          //extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 397          //      // $[P2 - Port 2 Pin Latch]
 398          //      // [P2 - Port 2 Pin Latch]$
 399          //
 400          //      // $[P2MDOUT - Port 2 Output Mode]
 401          //      /*
 402          //       // B0 (Port 2 Bit 0 Output Mode) = PUSH_PULL (P2.0 output is push-pull.)
 403          //       // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 404          //       //     drain.)
 405          //       // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
 406          //       //     drain.)
 407          //       // B3 (Port 2 Bit 3 Output Mode) = PUSH_PULL (P2.3 output is push-pull.)
 408          //       // B4 (Port 2 Bit 4 Output Mode) = OPEN_DRAIN (P2.4 output is open-
 409          //       //     drain.)
 410          //       // B5 (Port 2 Bit 5 Output Mode) = OPEN_DRAIN (P2.5 output is open-
 411          //       //     drain.)
 412          //       // B6 (Port 2 Bit 6 Output Mode) = OPEN_DRAIN (P2.6 output is open-
 413          //       //     drain.)
 414          //       */
 415          //      P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN
 416          //                      | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 417          //                      | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 418          //                      | P2MDOUT_B6__PUSH_PULL;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 8   

 419          //      // [P2MDOUT - Port 2 Output Mode]$
 420          //
 421          //      // $[P2MDIN - Port 2 Input Mode]
 422          //      // [P2MDIN - Port 2 Input Mode]$
 423          //
 424          //      // $[P2SKIP - Port 2 Skip]
 425          //      /*
 426          //       // B0 (Port 2 Bit 0 Skip) = SKIPPED (P2.0 pin is skipped by the
 427          //       //     crossbar.)
 428          //       // B1 (Port 2 Bit 1 Skip) = NOT_SKIPPED (P2.1 pin is not skipped by the
 429          //       //     crossbar.)
 430          //       // B2 (Port 2 Bit 2 Skip) = NOT_SKIPPED (P2.2 pin is not skipped by the
 431          //       //     crossbar.)
 432          //       // B3 (Port 2 Bit 3 Skip) = SKIPPED (P2.3 pin is skipped by the
 433          //       //     crossbar.)
 434          //       */
 435          //      SFRPAGE = 0x20;
 436          ////    P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__NOT_SKIPPED
 437          ////                    | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 438          ////    // [P2SKIP - Port 2 Skip]$
 439          //
 440          //      // $[P2MASK - Port 2 Mask]
 441          //      // [P2MASK - Port 2 Mask]$
 442          //
 443          //      // $[P2MAT - Port 2 Match]
 444          //      // [P2MAT - Port 2 Match]$
 445          //
 446          //}
 447          //
 448          ////================================================================================
 449          //// PBCFG_0_enter_DefaultMode_from_RESET
 450          ////================================================================================
 451          //extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 452          //      // $[XBR2 - Port I/O Crossbar 2]
 453          //      /*
 454          //       // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 455          //       //     Pullups enabled (except for Ports whose I/O are configured for analog
 456          //       //     mode).)
 457          //       // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 458          //       // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 459          //       //     pin.)
 460          //       // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 461          //       //     at Port pin.)
 462          //       // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 463          //       //     at Port pin.)
 464          //       */
 465          //      SFRPAGE = 0x00;
 466          //      XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 467          //                      | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 468          //                      | XBR2_URT1CTSE__DISABLED;
 469          //      // [XBR2 - Port I/O Crossbar 2]$
 470          //
 471          //      // $[PRTDRV - Port Drive Strength]
 472          //      // [PRTDRV - Port Drive Strength]$
 473          //
 474          //      // $[XBR0 - Port I/O Crossbar 0]
 475          //      /*
 476          //       // URT0E (UART0 I/O Enable) = ENABLED (UART0 TX0, RX0 routed to Port pins
 477          //       //     P0.4 and P0.5.)
 478          //       // SPI0E (SPI I/O Enable) = DISABLED (SPI I/O unavailable at Port pins.)
 479          //       // SMB0E (SMB0 I/O Enable) = DISABLED (SMBus 0 I/O unavailable at Port
 480          //       //     pins.)
 481          //       // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 9   

 482          //       //     pin.)
 483          //       // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 484          //       //     (Asynchronous CP0 unavailable at Port pin.)
 485          //       // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 486          //       //     pin.)
 487          //       // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 488          //       //     (Asynchronous CP1 unavailable at Port pin.)
 489          //       // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 490          //       //     pin.)
 491          //       */
 492          //      XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 493          //                      | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 494          //                      | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 495          //      // [XBR0 - Port I/O Crossbar 0]$
 496          //
 497          //      // $[XBR1 - Port I/O Crossbar 1]
 498          //      // [XBR1 - Port I/O Crossbar 1]$
 499          //
 500          //}
 501          //
 502          ////================================================================================
 503          //// CLOCK_0_enter_DefaultMode_from_RESET
 504          ////================================================================================
 505          //extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 506          //      // $[HFOSC1 Setup]
 507          //      // [HFOSC1 Setup]$
 508          //
 509          //      // $[CLKSEL - Clock Select]
 510          //      /*
 511          //       // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 512          //       //     High Frequency Oscillator 0.)
 513          //       // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 514          //       //     selected clock source divided by 1.)
 515          //       // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 516          //       //     High Frequency Oscillator 0.)
 517          //       // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 518          //       //     selected clock source divided by 1.)
 519          //       */
 520          //      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 521          //      while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 522          //              ;
 523          //      // [CLKSEL - Clock Select]$
 524          //
 525          //}
 526          //
 527          ////================================================================================
 528          //// TIMER01_0_enter_DefaultMode_from_RESET
 529          ////================================================================================
 530          //              extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 531          //                      // $[Timer Initialization]
 532          //                      //Save Timer Configuration
 533          //                      uint8_t TCON_save;
 534          //                      TCON_save = TCON;
 535          //                      //Stop Timers
 536          //                      TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 537          //
 538          //                      // [Timer Initialization]$
 539          //
 540          //                      // $[TH0 - Timer 0 High Byte]
 541          //                      /*
 542          //                       // TH0 (Timer 0 High Byte) = 0xC0
 543          //                       */
 544          //                      TH0 = 10010110;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 10  

 545          //                      TH1 = 10010110;
 546          //                      // [TH0 - Timer 0 High Byte]$
 547          //
 548          //                      // $[TL0 - Timer 0 Low Byte]
 549          //                      // [TL0 - Timer 0 Low Byte]$
 550          //
 551          //                      // $[TH1 - Timer 1 High Byte]
 552          //                      // [TH1 - Timer 1 High Byte]$
 553          //
 554          //                      // $[TL1 - Timer 1 Low Byte]
 555          //                      // [TL1 - Timer 1 Low Byte]$
 556          //                      //TCON_TR1=1;
 557          //                      // $[Timer Restoration]
 558          //                      //Restore Timer Configuration
 559          //                      TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 560          //
 561          //                      // [Timer Restoration]$
 562          //
 563          //              }
 564          //
 565          ////================================================================================
 566          //// TIMER_SETUP_0_enter_DefaultMode_from_RESET
 567          ////================================================================================
 568          //extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 569          //      // $[CKCON0 - Clock Control 0]
 570          //      /*
 571          //       // SCA (Timer 0/1 Prescale) = SYSCLK_DIV_48 (System clock divided by 48.)
 572          //       // T0M (Timer 0 Clock Select) = PRESCALE (Counter/Timer 0 uses the clock
 573          //       //     defined by the prescale field, SCA.)
 574          //       // T2MH (Timer 2 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 high
 575          //       //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 576          //       // T2ML (Timer 2 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 low
 577          //       //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 578          //       // T3MH (Timer 3 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 high
 579          //       //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 580          //       // T3ML (Timer 3 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 low
 581          //       //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 582          //       // T1M (Timer 1 Clock Select) = PRESCALE (Timer 1 uses the clock defined
 583          //       //     by the prescale field, SCA.)
 584          //       */
 585          //      CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 586          //                      | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 587          //                      | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 588          //                      | CKCON0_T1M__SYSCLK;
 589          //      // [CKCON0 - Clock Control 0]$
 590          //
 591          //      // $[CKCON1 - Clock Control 1]
 592          //      // [CKCON1 - Clock Control 1]$
 593          //      //CKCON1 =  CKCON1_T0M__SYSCLK;
 594          //
 595          //      // $[TMOD - Timer 0/1 Mode]
 596          //      /*
 597          //       // T0M (Timer 0 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 598          //       //     Auto-Reload)
 599          //       // T1M (Timer 1 Mode Select) = MODE0 (Mode 0, 13-bit Counter/Timer)
 600          //       // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 601          //       //     on the clock defined by T0M in the CKCON0 register.)
 602          //       // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 603          //       //     irrespective of INT0 logic level.)
 604          //       // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
 605          //       //     on the clock defined by T1M in the CKCON0 register.)
 606          //       // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 607          //       //     irrespective of INT1 logic level.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 11  

 608          //       */
 609          //      TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 610          //                      | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 611          //      // [TMOD - Timer 0/1 Mode]$
 612          //      // $[TCON - Timer 0/1 Control]
 613          //      /*
 614          //       // TR0 (Timer 0 Run Control) = RUN (Start Timer 0 running.)
 615          //       */
 616          //      TCON |= TCON_TR0__RUN | TCON_TR1__RUN;
 617          //      // [TCON - Timer 0/1 Control]$
 618          //
 619          //}
 620          //
 621          ////================================================================================
 622          //// UART_0_enter_DefaultMode_from_RESET
 623          ////================================================================================
 624          //extern void UART_0_enter_DefaultMode_from_RESET(void) {
 625          //      // $[SCON0 - UART0 Serial Port Control]
 626          //      /*
 627          //       // REN (Receive Enable) = RECEIVE_ENABLED (UART0 reception enabled.)
 628          //       */
 629          //      SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 630          //      // [SCON0 - UART0 Serial Port Control]$
 631          //
 632          //}
 633          //
 634          ////================================================================================
 635          //// INTERRUPT_0_enter_DefaultMode_from_RESET
 636          ////================================================================================
 637          //extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 638          //      // $[EIE1 - Extended Interrupt Enable 1]
 639          //      // [EIE1 - Extended Interrupt Enable 1]$
 640          //
 641          //      // $[EIE2 - Extended Interrupt Enable 2]
 642          //      // [EIE2 - Extended Interrupt Enable 2]$
 643          //
 644          //      // $[EIP1H - Extended Interrupt Priority 1 High]
 645          //      // [EIP1H - Extended Interrupt Priority 1 High]$
 646          //
 647          //      // $[EIP1 - Extended Interrupt Priority 1 Low]
 648          //      // [EIP1 - Extended Interrupt Priority 1 Low]$
 649          //
 650          //      // $[EIP2 - Extended Interrupt Priority 2]
 651          //      // [EIP2 - Extended Interrupt Priority 2]$
 652          //
 653          //      // $[EIP2H - Extended Interrupt Priority 2 High]
 654          //      // [EIP2H - Extended Interrupt Priority 2 High]$
 655          //
 656          //      // $[IE - Interrupt Enable]
 657          //      /*
 658          //       // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
 659          //       // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 660          //       //     interrupt 0.)
 661          //       // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 662          //       //     interrupt 1.)
 663          //       // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
 664          //       //     interrupts.)
 665          //       // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 666          //       //     interrupt.)
 667          //       // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 668          //       //     interrupt.)
 669          //       // ET2 (Timer 2 Interrupt Enable) = DISABLED (Disable Timer 2 interrupt.)
 670          //       // ES0 (UART0 Interrupt Enable) = ENABLED (Enable UART0 interrupt.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 12  

 671          //       */
 672          //      IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 673          //                      | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 674          //                      | IE_ET2__ENABLED | IE_ES0__ENABLED;
 675          //      // [IE - Interrupt Enable]$
 676          //
 677          //      // $[IP - Interrupt Priority]
 678          //      // [IP - Interrupt Priority]$
 679          //
 680          //      // $[IPH - Interrupt Priority High]
 681          //      // [IPH - Interrupt Priority High]$
 682          //
 683          //}
 684          //
 685          //extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 686          //      // $[Timer Initialization]
 687          //      // Save Timer Configuration
 688          //      uint8_t TMR3CN0_TR3_save;
 689          //      TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 690          //      // Stop Timer
 691          //      TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 692          //      // [Timer Initialization]$
 693          //
 694          //      // $[TMR3CN1 - Timer 3 Control 1]
 695          //      // [TMR3CN1 - Timer 3 Control 1]$
 696          //
 697          //      // $[TMR3CN0 - Timer 3 Control]
 698          //      // [TMR3CN0 - Timer 3 Control]$
 699          //
 700          //      // $[TMR3H - Timer 3 High Byte]
 701          //      /*
 702          //       // TMR3H (Timer 3 High Byte) = 0xF8
 703          //       */
 704          //      TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 705          //      // [TMR3H - Timer 3 High Byte]$
 706          //
 707          //      // $[TMR3L - Timer 3 Low Byte]
 708          //      /*
 709          //       // TMR3L (Timer 3 Low Byte) = 0x06
 710          //       */
 711          //      TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 712          //      // [TMR3L - Timer 3 Low Byte]$
 713          //
 714          //      // $[TMR3RLH - Timer 3 Reload High Byte]
 715          //      /*
 716          //       // TMR3RLH (Timer 3 Reload High Byte) = 0xF8
 717          //       */
 718          //      TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 719          //      // [TMR3RLH - Timer 3 Reload High Byte]$
 720          //
 721          //      // $[TMR3RLL - Timer 3 Reload Low Byte]
 722          //      /*
 723          //       // TMR3RLL (Timer 3 Reload Low Byte) = 0x06
 724          //       */
 725          //      TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 726          //      // [TMR3RLL - Timer 3 Reload Low Byte]$
 727          //
 728          //      // $[TMR3CN0]
 729          //      /*
 730          //       // TR3 (Timer 3 Run Control) = RUN (Start Timer 3 running.)
 731          //       */
 732          //      TMR3CN0 |= TMR3CN0_TR3__RUN;
 733          //      // [TMR3CN0]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 13  

 734          //
 735          //      // $[Timer Restoration]
 736          //      // Restore Timer Configuration
 737          //      TMR3CN0 |= TMR3CN0_TR3_save;
 738          //      // [Timer Restoration]$
 739          //
 740          //}
 741          //extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 742          //      // $[P3 - Port 3 Pin Latch]
 743          //      // [P3 - Port 3 Pin Latch]$
 744          //
 745          //      // $[P3MDOUT - Port 3 Output Mode]
 746          //      /*
 747          //       // B0 (Port 3 Bit 0 Output Mode) = OPEN_DRAIN (P3.0 output is open-
 748          //       //     drain.)
 749          //       // B1 (Port 3 Bit 1 Output Mode) = OPEN_DRAIN (P3.1 output is open-
 750          //       //     drain.)
 751          //       // B2 (Port 3 Bit 2 Output Mode) = OPEN_DRAIN (P3.2 output is open-
 752          //       //     drain.)
 753          //       // B3 (Port 3 Bit 3 Output Mode) = OPEN_DRAIN (P3.3 output is open-
 754          //       //     drain.)
 755          //       // B4 (Port 3 Bit 4 Output Mode) = PUSH_PULL (P3.4 output is push-pull.)
 756          //       // B7 (Port 3 Bit 7 Output Mode) = OPEN_DRAIN (P3.7 output is open-
 757          //       //     drain.)
 758          //       */
 759          //      SFRPAGE = 0x20;
 760          //      P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 761          //                      | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN
 762          //                      | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B7__OPEN_DRAIN;
 763          //      // [P3MDOUT - Port 3 Output Mode]$
 764          //
 765          //      // $[P3MDIN - Port 3 Input Mode]
 766          //      // [P3MDIN - Port 3 Input Mode]$
 767          //
 768          //}
 769          //
 770          //=========================================================
 771          // src/InitDevice.c: generated by Hardware Configurator
 772          //
 773          // This file will be regenerated when saving a document.
 774          // leave the sections inside the "$[...]" comment tags alone
 775          // or they will be overwritten!
 776          //=========================================================
 777          
 778          // USER INCLUDES
 779          #include <SI_EFM8BB3_Register_Enums.h>
 780          #include "InitDevice.h"
 781          
 782          // USER PROTOTYPES
 783          // USER FUNCTIONS
 784          
 785          // $[Library Includes]
 786          // [Library Includes]$
 787          
 788          //==============================================================================
 789          // enter_DefaultMode_from_RESET
 790          //==============================================================================
 791          extern void enter_DefaultMode_from_RESET(void) {
 792   1              // $[Config Calls]
 793   1              // Save the SFRPAGE
 794   1              uint8_t SFRPAGE_save = SFRPAGE;
 795   1              WDT_0_enter_DefaultMode_from_RESET();
 796   1              PORTS_0_enter_DefaultMode_from_RESET();
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 14  

 797   1              PORTS_1_enter_DefaultMode_from_RESET();
 798   1              PORTS_2_enter_DefaultMode_from_RESET();
 799   1              PORTS_3_enter_DefaultMode_from_RESET();
 800   1              PBCFG_0_enter_DefaultMode_from_RESET();
 801   1              CLOCK_0_enter_DefaultMode_from_RESET();
 802   1              TIMER16_3_enter_DefaultMode_from_RESET();
 803   1              TIMER01_0_enter_DefaultMode_from_RESET();
 804   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
 805   1              SPI_0_enter_DefaultMode_from_RESET();
 806   1              UART_0_enter_DefaultMode_from_RESET();
 807   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
 808   1              ADC_0_enter_DefaultMode_from_RESET();
 809   1              // Restore the SFRPAGE
 810   1              SFRPAGE = SFRPAGE_save;
 811   1              // [Config Calls]$
 812   1      
 813   1      }
 814          
 815          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
 816   1              // $[WDTCN - Watchdog Timer Control]
 817   1              SFRPAGE = 0x00;
 818   1              //Disable Watchdog with key sequence
 819   1              WDTCN = 0xDE; //First key
 820   1              WDTCN = 0xAD; //Second key
 821   1              // [WDTCN - Watchdog Timer Control]$
 822   1      
 823   1      }
 824          
 825          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 826   1              // $[HFOSC1 Setup]
 827   1              // [HFOSC1 Setup]$
 828   1      
 829   1              // $[CLKSEL - Clock Select]
 830   1              /*
 831   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 832   1               //     High Frequency Oscillator 0.)
 833   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 834   1               //     selected clock source divided by 1.)
 835   1               */
 836   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 837   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 838   1                      ;
 839   1              // [CLKSEL - Clock Select]$
 840   1      
 841   1      }
 842          
 843          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 844   1              // $[SPI0CKR - SPI0 Clock Rate]
 845   1              /*
 846   1               // SPI0CKR (SPI0 Clock Rate) = 0x0B
 847   1               */
 848   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 849   1              // [SPI0CKR - SPI0 Clock Rate]$
 850   1      
 851   1              // $[SPI0CFG - SPI0 Configuration]
 852   1              /*
 853   1               // MSTEN (Master Mode Enable) = MASTER_ENABLED (Enable master mode.
 854   1               //     Operate as a master.)
 855   1               */
 856   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 857   1              // [SPI0CFG - SPI0 Configuration]$
 858   1      
 859   1              // $[SPI0PCF - SPI0 Pin Configuration]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 15  

 860   1              // [SPI0PCF - SPI0 Pin Configuration]$
 861   1      
 862   1              // $[SPI0CN0 - SPI0 Control]
 863   1              /*
 864   1               // SPIEN (SPI0 Enable) = ENABLED (Enable the SPI module.)
 865   1               // NSSMD (Slave Select Mode) = 3_WIRE (3-Wire Slave or 3-Wire Master
 866   1               //     Mode. NSS signal is not routed to a port pin.)
 867   1               */
 868   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 869   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 870   1              // [SPI0CN0 - SPI0 Control]$
 871   1      
 872   1      }
 873          
 874          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 875   1              // $[EIE1 - Extended Interrupt Enable 1]
 876   1              /*
 877   1               // EADC0 (ADC0 Conversion Complete Interrupt Enable) = DISABLED (Disable
 878   1               //     ADC0 Conversion Complete interrupt.)
 879   1               // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
 880   1               //     ADC0 Window Comparison interrupt.)
 881   1               // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 882   1               //     interrupts.)
 883   1               // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 884   1               //     interrupts.)
 885   1               // EMAT (Port Match Interrupts Enable) = ENABLED (Enable interrupt
 886   1               //     requests generated by a Port Match.)
 887   1               // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 888   1               //     (Disable all PCA0 interrupts.)
 889   1               // ESMB0 (SMBus (SMB0) Interrupt Enable) = DISABLED (Disable all SMB0
 890   1               //     interrupts.)
 891   1               // ET3 (Timer 3 Interrupt Enable) = ENABLED (Enable interrupt requests
 892   1               //     generated by the TF3L or TF3H flags.)
 893   1               */
 894   1      //      EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 895   1      //                      | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 896   1      //                      | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 897   1              // [EIE1 - Extended Interrupt Enable 1]$
 898   1      
 899   1              // $[EIE2 - Extended Interrupt Enable 2]
 900   1              // [EIE2 - Extended Interrupt Enable 2]$
 901   1      
 902   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 903   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 904   1      
 905   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 906   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 907   1      
 908   1              // $[EIP2 - Extended Interrupt Priority 2]
 909   1              // [EIP2 - Extended Interrupt Priority 2]$
 910   1      
 911   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 912   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 913   1      
 914   1              // $[IE - Interrupt Enable]
 915   1              /*
 916   1               // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
 917   1               // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 918   1               //     interrupt 0.)
 919   1               // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 920   1               //     interrupt 1.)
 921   1               // ESPI0 (SPI0 Interrupt Enable) = ENABLED (Enable interrupt requests
 922   1               //     generated by SPI0.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 16  

 923   1               // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 924   1               //     interrupt.)
 925   1               // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 926   1               //     interrupt.)
 927   1               // ET2 (Timer 2 Interrupt Enable) = ENABLED (Enable interrupt requests
 928   1               //     generated by the TF2L or TF2H flags.)
 929   1               // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 930   1               */
 931   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 932   1                                      | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 933   1                                      | IE_ET2__ENABLED | IE_ES0__ENABLED;
 934   1              // [IE - Interrupt Enable]$
 935   1      
 936   1              // $[IP - Interrupt Priority]
 937   1              // [IP - Interrupt Priority]$
 938   1      
 939   1              // $[IPH - Interrupt Priority High]
 940   1              // [IPH - Interrupt Priority High]$
 941   1      
 942   1      }
 943          
 944          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 945   1              // $[XBR2 - Port I/O Crossbar 2]
 946   1              /*
 947   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 948   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 949   1               //     mode).)
 950   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 951   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 952   1               //     pin.)
 953   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 954   1               //     at Port pin.)
 955   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 956   1               //     at Port pin.)
 957   1               */
 958   1              SFRPAGE = 0x00;
 959   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 960   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 961   1                              | XBR2_URT1CTSE__DISABLED;
 962   1              // [XBR2 - Port I/O Crossbar 2]$
 963   1      
 964   1              // $[PRTDRV - Port Drive Strength]
 965   1              // [PRTDRV - Port Drive Strength]$
 966   1      
 967   1              // $[XBR0 - Port I/O Crossbar 0]
 968   1              /*
 969   1               // URT0E (UART0 I/O Enable) = DISABLED (UART0 I/O unavailable at Port
 970   1               //     pin.)
 971   1               // SPI0E (SPI I/O Enable) = ENABLED (SPI I/O routed to Port pins. The SPI
 972   1               //     can be assigned either 3 or 4 GPIO pins.)
 973   1               // SMB0E (SMB0 I/O Enable) = DISABLED (SMBus 0 I/O unavailable at Port
 974   1               //     pins.)
 975   1               // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 976   1               //     pin.)
 977   1               // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 978   1               //     (Asynchronous CP0 unavailable at Port pin.)
 979   1               // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 980   1               //     pin.)
 981   1               // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 982   1               //     (Asynchronous CP1 unavailable at Port pin.)
 983   1               // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 984   1               //     pin.)
 985   1               */
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 17  

 986   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 987   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 988   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 989   1              // [XBR0 - Port I/O Crossbar 0]$
 990   1      
 991   1              // $[XBR1 - Port I/O Crossbar 1]
 992   1              // [XBR1 - Port I/O Crossbar 1]$
 993   1      
 994   1      }
 995          
 996          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 997   1              // $[Timer Initialization]
 998   1              // Save Timer Configuration
 999   1              uint8_t TMR3CN0_TR3_save;
1000   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
1001   1              // Stop Timer
1002   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
1003   1              // [Timer Initialization]$
1004   1      
1005   1              // $[TMR3CN1 - Timer 3 Control 1]
1006   1              // [TMR3CN1 - Timer 3 Control 1]$
1007   1      
1008   1              // $[TMR3CN0 - Timer 3 Control]
1009   1              // [TMR3CN0 - Timer 3 Control]$
1010   1      
1011   1              // $[TMR3H - Timer 3 High Byte]
1012   1              /*
1013   1               // TMR3H (Timer 3 High Byte) = 0xF8
1014   1               */
1015   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
1016   1              // [TMR3H - Timer 3 High Byte]$
1017   1      
1018   1              // $[TMR3L - Timer 3 Low Byte]
1019   1              /*
1020   1               // TMR3L (Timer 3 Low Byte) = 0x06
1021   1               */
1022   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
1023   1              // [TMR3L - Timer 3 Low Byte]$
1024   1      
1025   1              // $[TMR3RLH - Timer 3 Reload High Byte]
1026   1              /*
1027   1               // TMR3RLH (Timer 3 Reload High Byte) = 0xF8
1028   1               */
1029   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
1030   1              // [TMR3RLH - Timer 3 Reload High Byte]$
1031   1      
1032   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
1033   1              /*
1034   1               // TMR3RLL (Timer 3 Reload Low Byte) = 0x06
1035   1               */
1036   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
1037   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
1038   1      
1039   1              // $[TMR3CN0]
1040   1              /*
1041   1               // TR3 (Timer 3 Run Control) = RUN (Start Timer 3 running.)
1042   1               */
1043   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
1044   1              // [TMR3CN0]$
1045   1      
1046   1              // $[Timer Restoration]
1047   1              // Restore Timer Configuration
1048   1              TMR3CN0 |= TMR3CN0_TR3_save;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 18  

1049   1              // [Timer Restoration]$
1050   1      
1051   1      }
1052          
1053          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
1054   1              // $[Timer Initialization]
1055   1                              //Save Timer Configuration
1056   1                              uint8_t TCON_save;
1057   1                              TCON_save = TCON;
1058   1                              //Stop Timers
1059   1                              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
1060   1      
1061   1                              // [Timer Initialization]$
1062   1      
1063   1                              // $[TH0 - Timer 0 High Byte]
1064   1                              /*
1065   1                               // TH0 (Timer 0 High Byte) = 0xC0
1066   1                               */
1067   1                              TH0 = 0xC0;
1068   1                              TH1= 0x96;
1069   1                              //TH1 = 10010110;
1070   1                              //TH1=0x96;
1071   1                              // [TH0 - Timer 0 High Byte]$
1072   1      
1073   1                              // $[TL0 - Timer 0 Low Byte]
1074   1                              // [TL0 - Timer 0 Low Byte]$
1075   1      
1076   1                              // $[TH1 - Timer 1 High Byte]
1077   1                              // [TH1 - Timer 1 High Byte]$
1078   1      
1079   1                              // $[TL1 - Timer 1 Low Byte]
1080   1                              // [TL1 - Timer 1 Low Byte]$
1081   1                              //TCON_TR1=1;
1082   1                              // $[Timer Restoration]
1083   1                              //Restore Timer Configuration
1084   1                              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
1085   1      
1086   1                              // [Timer Restoration]$
1087   1      
1088   1      
1089   1      }
1090          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
1091   1              // $[CKCON0 - Clock Control 0]
1092   1      //      CKCON0 = 0x2  | 0 | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
1093   1      //                      | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
1094   1      //                      | CKCON0_T1M__SYSCLK;
1095   1      // here we are setting Timer 2 to use a prescaled sysclock. It is scaled down by 48
1096   1      //      effectivly making it run at .510416 MHz JP
1097   1      
1098   1      //Enabiling timer 0 interrupt JP
1099   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
1100   1                                      | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
1101   1                                      | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
1102   1                                      | CKCON0_T1M__SYSCLK;
1103   1              // setting Timer one to mode one; aka 16 bits... JP
1104   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
1105   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
1106   1      
1107   1              TCON |= TCON_TR0__RUN | TCON_TR1__RUN;
1108   1      
1109   1      }
1110          
1111          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 19  

1112          // PORTS_0_enter_DefaultMode_from_RESET
1113          //================================================================================
1114          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
1115   1              // $[P0 - Port 0 Pin Latch]
1116   1              /*
1117   1               // B0 (Port 0 Bit 0 Latch) = HIGH (P0.0 is high. Set P0.0 to drive or
1118   1               //     float high.)
1119   1               // B1 (Port 0 Bit 1 Latch) = HIGH (P0.1 is high. Set P0.1 to drive or
1120   1               //     float high.)
1121   1               // B2 (Port 0 Bit 2 Latch) = HIGH (P0.2 is high. Set P0.2 to drive or
1122   1               //     float high.)
1123   1               // B3 (Port 0 Bit 3 Latch) = HIGH (P0.3 is high. Set P0.3 to drive or
1124   1               //     float high.)
1125   1               // B4 (Port 0 Bit 4 Latch) = HIGH (P0.4 is high. Set P0.4 to drive or
1126   1               //     float high.)
1127   1               // B5 (Port 0 Bit 5 Latch) = HIGH (P0.5 is high. Set P0.5 to drive or
1128   1               //     float high.)
1129   1               // B6 (Port 0 Bit 6 Latch) = HIGH (P0.6 is high. Set P0.6 to drive or
1130   1               //     float high.)
1131   1               // B7 (Port 0 Bit 7 Latch) = HIGH (P0.7 is high. Set P0.7 to drive or
1132   1               //     float high.)
1133   1               */
1134   1              P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
1135   1                              | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
1136   1              // [P0 - Port 0 Pin Latch]$
1137   1      
1138   1              // $[P0MDOUT - Port 0 Output Mode]
1139   1              /*
1140   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
1141   1               //     drain.)
1142   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
1143   1               //     drain.)
1144   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
1145   1               //     drain.)
1146   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
1147   1               //     drain.)
1148   1               // B4 (Port 0 Bit 4 Output Mode) = PUSH_PULL (P0.4 output is push-pull.)
1149   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
1150   1               //     drain.)
1151   1               // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
1152   1               //     drain.)
1153   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
1154   1               //     drain.)
1155   1               */
1156   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
1157   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
1158   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__PUSH_PULL
1159   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
1160   1              // [P0MDOUT - Port 0 Output Mode]$
1161   1      
1162   1              // $[P0MDIN - Port 0 Input Mode]
1163   1              /*
1164   1               // B0 (Port 0 Bit 0 Input Mode) = DIGITAL (P0.0 pin is configured for
1165   1               //     digital mode.)
1166   1               // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
1167   1               //     digital mode.)
1168   1               // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
1169   1               //     digital mode.)
1170   1               // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
1171   1               //     digital mode.)
1172   1               // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
1173   1               //     digital mode.)
1174   1               // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 20  

1175   1               //     digital mode.)
1176   1               // B6 (Port 0 Bit 6 Input Mode) = DIGITAL (P0.6 pin is configured for
1177   1               //     digital mode.)
1178   1               // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
1179   1               //     digital mode.)
1180   1               */
1181   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
1182   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
1183   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
1184   1              // [P0MDIN - Port 0 Input Mode]$
1185   1      
1186   1              // $[P0SKIP - Port 0 Skip]
1187   1              /*
1188   1               // B0 (Port 0 Bit 0 Skip) = NOT_SKIPPED (P0.0 pin is not skipped by the
1189   1               //     crossbar.)
1190   1               // B1 (Port 0 Bit 1 Skip) = NOT_SKIPPED (P0.1 pin is not skipped by the
1191   1               //     crossbar.)
1192   1               // B2 (Port 0 Bit 2 Skip) = NOT_SKIPPED (P0.2 pin is not skipped by the
1193   1               //     crossbar.)
1194   1               // B3 (Port 0 Bit 3 Skip) = NOT_SKIPPED (P0.3 pin is not skipped by the
1195   1               //     crossbar.)
1196   1               // B4 (Port 0 Bit 4 Skip) = NOT_SKIPPED (P0.4 pin is not skipped by the
1197   1               //     crossbar.)
1198   1               // B5 (Port 0 Bit 5 Skip) = NOT_SKIPPED (P0.5 pin is not skipped by the
1199   1               //     crossbar.)
1200   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
1201   1               //     crossbar.)
1202   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
1203   1               //     crossbar.)
1204   1               */
1205   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
1206   1                                      | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__NOT_SKIPPED
1207   1                                      | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
1208   1              // [P0SKIP - Port 0 Skip]$
1209   1      
1210   1              // $[P0MASK - Port 0 Mask]
1211   1              /*
1212   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
1213   1               //     ignored and will not cause a port mismatch event.)
1214   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
1215   1               //     ignored and will not cause a port mismatch event.)
1216   1               // B2 (Port 0 Bit 2 Mask Value) = IGNORED (P0.2 pin logic value is
1217   1               //     ignored and will not cause a port mismatch event.)
1218   1               // B3 (Port 0 Bit 3 Mask Value) = IGNORED (P0.3 pin logic value is
1219   1               //     ignored and will not cause a port mismatch event.)
1220   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
1221   1               //     ignored and will not cause a port mismatch event.)
1222   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
1223   1               //     ignored and will not cause a port mismatch event.)
1224   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
1225   1               //     ignored and will not cause a port mismatch event.)
1226   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
1227   1               //     ignored and will not cause a port mismatch event.)
1228   1               */
1229   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__IGNORED
1230   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
1231   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
1232   1              // [P0MASK - Port 0 Mask]$
1233   1      
1234   1              // $[P0MAT - Port 0 Match]
1235   1              /*
1236   1               // B0 (Port 0 Bit 0 Match Value) = HIGH (P0.0 pin logic value is compared
1237   1               //     with logic HIGH.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 21  

1238   1               // B1 (Port 0 Bit 1 Match Value) = HIGH (P0.1 pin logic value is compared
1239   1               //     with logic HIGH.)
1240   1               // B2 (Port 0 Bit 2 Match Value) = HIGH (P0.2 pin logic value is compared
1241   1               //     with logic HIGH.)
1242   1               // B3 (Port 0 Bit 3 Match Value) = HIGH (P0.3 pin logic value is compared
1243   1               //     with logic HIGH.)
1244   1               // B4 (Port 0 Bit 4 Match Value) = HIGH (P0.4 pin logic value is compared
1245   1               //     with logic HIGH.)
1246   1               // B5 (Port 0 Bit 5 Match Value) = HIGH (P0.5 pin logic value is compared
1247   1               //     with logic HIGH.)
1248   1               // B6 (Port 0 Bit 6 Match Value) = HIGH (P0.6 pin logic value is compared
1249   1               //     with logic HIGH.)
1250   1               // B7 (Port 0 Bit 7 Match Value) = HIGH (P0.7 pin logic value is compared
1251   1               //     with logic HIGH.)
1252   1               */
1253   1              P0MAT = P0MAT_B0__HIGH | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
1254   1                              | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
1255   1              // [P0MAT - Port 0 Match]$
1256   1      
1257   1      }
1258          //================================================================================
1259          // PORTS_1_enter_DefaultMode_from_RESET
1260          //================================================================================
1261          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
1262   1              // $[P1 - Port 1 Pin Latch]
1263   1              /*
1264   1               // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
1265   1               //     float high.)
1266   1               // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
1267   1               //     float high.)
1268   1               // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
1269   1               //     float high.)
1270   1               // B3 (Port 1 Bit 3 Latch) = HIGH (P1.3 is high. Set P1.3 to drive or
1271   1               //     float high.)
1272   1               // B4 (Port 1 Bit 4 Latch) = HIGH (P1.4 is high. Set P1.4 to drive or
1273   1               //     float high.)
1274   1               // B5 (Port 1 Bit 5 Latch) = HIGH (P1.5 is high. Set P1.5 to drive or
1275   1               //     float high.)
1276   1               // B6 (Port 1 Bit 6 Latch) = HIGH (P1.6 is high. Set P1.6 to drive or
1277   1               //     float high.)
1278   1               // B7 (Port 1 Bit 7 Latch) = HIGH (P1.7 is high. Set P1.7 to drive or
1279   1               //     float high.)
1280   1               */
1281   1              P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
1282   1                              | P1_B5__HIGH | P1_B6__HIGH | P1_B7__HIGH;
1283   1              // [P1 - Port 1 Pin Latch]$
1284   1      
1285   1              // $[P1MDOUT - Port 1 Output Mode]
1286   1              /*
1287   1               // B0 (Port 1 Bit 0 Output Mode) = OPEN_DRAIN (P1.0 output is open-
1288   1               //     drain.)
1289   1               // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
1290   1               //     drain.)
1291   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
1292   1               //     drain.)
1293   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
1294   1               //     drain.)
1295   1               // B4 (Port 1 Bit 4 Output Mode) = OPEN_DRAIN (P1.4 output is open-
1296   1               //     drain.)
1297   1               // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
1298   1               //     drain.)
1299   1               // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
1300   1               //     drain.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 22  

1301   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
1302   1               //     drain.)
1303   1               */
1304   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
1305   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
1306   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
1307   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
1308   1              // [P1MDOUT - Port 1 Output Mode]$
1309   1      
1310   1              // $[P1MDIN - Port 1 Input Mode]
1311   1              /*
1312   1               // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
1313   1               //     digital mode.)
1314   1               // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
1315   1               //     digital mode.)
1316   1               // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
1317   1               //     digital mode.)
1318   1               // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
1319   1               //     digital mode.)
1320   1               // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
1321   1               //     digital mode.)
1322   1               // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
1323   1               //     digital mode.)
1324   1               // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
1325   1               //     digital mode.)
1326   1               // B7 (Port 1 Bit 7 Input Mode) = ANALOG (P1.7 pin is configured for
1327   1               //     analog mode.)
1328   1               */
1329   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
1330   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
1331   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
1332   1              // [P1MDIN - Port 1 Input Mode]$
1333   1      
1334   1              // $[P1SKIP - Port 1 Skip]
1335   1              /*
1336   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
1337   1               //     crossbar.)
1338   1               // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
1339   1               //     crossbar.)
1340   1               // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
1341   1               //     crossbar.)
1342   1               // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
1343   1               //     crossbar.)
1344   1               // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
1345   1               //     crossbar.)
1346   1               // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
1347   1               //     crossbar.)
1348   1               // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
1349   1               //     crossbar.)
1350   1               // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
1351   1               //     crossbar.)
1352   1               */
1353   1      //      P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
1354   1      //                      | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
1355   1      //                      | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
1356   1      //                      | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__SKIPPED;
1357   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
1358   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
1359   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
1360   1              // [P1SKIP - Port 1 Skip]$
1361   1      
1362   1              // $[P1MASK - Port 1 Mask]
1363   1              /*
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 23  

1364   1               // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
1365   1               //     ignored and will not cause a port mismatch event.)
1366   1               // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
1367   1               //     ignored and will not cause a port mismatch event.)
1368   1               // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
1369   1               //     ignored and will not cause a port mismatch event.)
1370   1               // B3 (Port 1 Bit 3 Mask Value) = IGNORED (P1.3 pin logic value is
1371   1               //     ignored and will not cause a port mismatch event.)
1372   1               // B4 (Port 1 Bit 4 Mask Value) = IGNORED (P1.4 pin logic value is
1373   1               //     ignored and will not cause a port mismatch event.)
1374   1               // B5 (Port 1 Bit 5 Mask Value) = IGNORED (P1.5 pin logic value is
1375   1               //     ignored and will not cause a port mismatch event.)
1376   1               // B6 (Port 1 Bit 6 Mask Value) = IGNORED (P1.6 pin logic value is
1377   1               //     ignored and will not cause a port mismatch event.)
1378   1               // B7 (Port 1 Bit 7 Mask Value) = IGNORED (P1.7 pin logic value is
1379   1               //     ignored and will not cause a port mismatch event.)
1380   1               */
1381   1              P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED
1382   1                              | P1MASK_B3__IGNORED | P1MASK_B4__IGNORED | P1MASK_B5__IGNORED
1383   1                              | P1MASK_B6__IGNORED | P1MASK_B7__IGNORED;
1384   1              // [P1MASK - Port 1 Mask]$
1385   1      
1386   1              // $[P1MAT - Port 1 Match]
1387   1              /*
1388   1               // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
1389   1               //     with logic HIGH.)
1390   1               // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
1391   1               //     with logic HIGH.)
1392   1               // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
1393   1               //     with logic HIGH.)
1394   1               // B3 (Port 1 Bit 3 Match Value) = HIGH (P1.3 pin logic value is compared
1395   1               //     with logic HIGH.)
1396   1               // B4 (Port 1 Bit 4 Match Value) = HIGH (P1.4 pin logic value is compared
1397   1               //     with logic HIGH.)
1398   1               // B5 (Port 1 Bit 5 Match Value) = HIGH (P1.5 pin logic value is compared
1399   1               //     with logic HIGH.)
1400   1               // B6 (Port 1 Bit 6 Match Value) = HIGH (P1.6 pin logic value is compared
1401   1               //     with logic HIGH.)
1402   1               // B7 (Port 1 Bit 7 Match Value) = HIGH (P1.7 pin logic value is compared
1403   1               //     with logic HIGH.)
1404   1               */
1405   1              P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
1406   1                              | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH | P1MAT_B7__HIGH;
1407   1              // [P1MAT - Port 1 Match]$
1408   1      
1409   1      }
1410          
1411          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
1412   1              // $[P2 - Port 2 Pin Latch]
1413   1              // [P2 - Port 2 Pin Latch]$
1414   1      
1415   1              // $[P2MDOUT - Port 2 Output Mode]
1416   1              /*
1417   1               // B0 (Port 2 Bit 0 Output Mode) = PUSH_PULL (P2.0 output is push-pull.)
1418   1               // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
1419   1               //     drain.)
1420   1               // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
1421   1               //     drain.)
1422   1               // B3 (Port 2 Bit 3 Output Mode) = PUSH_PULL (P2.3 output is push-pull.)
1423   1               // B4 (Port 2 Bit 4 Output Mode) = OPEN_DRAIN (P2.4 output is open-
1424   1               //     drain.)
1425   1               // B5 (Port 2 Bit 5 Output Mode) = OPEN_DRAIN (P2.5 output is open-
1426   1               //     drain.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 24  

1427   1               // B6 (Port 2 Bit 6 Output Mode) = OPEN_DRAIN (P2.6 output is open-
1428   1               //     drain.)
1429   1               */
1430   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN
1431   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
1432   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
1433   1                              | P2MDOUT_B6__PUSH_PULL;
1434   1              // [P2MDOUT - Port 2 Output Mode]$
1435   1      
1436   1              // $[P2MDIN - Port 2 Input Mode]
1437   1              // [P2MDIN - Port 2 Input Mode]$
1438   1      
1439   1              // $[P2SKIP - Port 2 Skip]
1440   1              /*
1441   1               // B0 (Port 2 Bit 0 Skip) = SKIPPED (P2.0 pin is skipped by the
1442   1               //     crossbar.)
1443   1               // B1 (Port 2 Bit 1 Skip) = NOT_SKIPPED (P2.1 pin is not skipped by the
1444   1               //     crossbar.)
1445   1               // B2 (Port 2 Bit 2 Skip) = NOT_SKIPPED (P2.2 pin is not skipped by the
1446   1               //     crossbar.)
1447   1               // B3 (Port 2 Bit 3 Skip) = SKIPPED (P2.3 pin is skipped by the
1448   1               //     crossbar.)
1449   1               */
1450   1              SFRPAGE = 0x20;
1451   1      //      P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__NOT_SKIPPED
1452   1      //                      | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
1453   1      //      // [P2SKIP - Port 2 Skip]$
1454   1      
1455   1              // $[P2MASK - Port 2 Mask]
1456   1              // [P2MASK - Port 2 Mask]$
1457   1      
1458   1              // $[P2MAT - Port 2 Match]
1459   1              // [P2MAT - Port 2 Match]$
1460   1      
1461   1      }
1462          extern void UART_0_enter_DefaultMode_from_RESET(void) {
1463   1              // $[SCON0 - UART0 Serial Port Control]
1464   1              /*
1465   1               // REN (Receive Enable) = RECEIVE_ENABLED (UART0 reception enabled.)
1466   1               */
1467   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
1468   1              // [SCON0 - UART0 Serial Port Control]$
1469   1      
1470   1      }
1471          
1472          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
1473   1              // $[P3 - Port 3 Pin Latch]
1474   1              // [P3 - Port 3 Pin Latch]$
1475   1      
1476   1              // $[P3MDOUT - Port 3 Output Mode]
1477   1              /*
1478   1               // B0 (Port 3 Bit 0 Output Mode) = OPEN_DRAIN (P3.0 output is open-
1479   1               //     drain.)
1480   1               // B1 (Port 3 Bit 1 Output Mode) = OPEN_DRAIN (P3.1 output is open-
1481   1               //     drain.)
1482   1               // B2 (Port 3 Bit 2 Output Mode) = OPEN_DRAIN (P3.2 output is open-
1483   1               //     drain.)
1484   1               // B3 (Port 3 Bit 3 Output Mode) = OPEN_DRAIN (P3.3 output is open-
1485   1               //     drain.)
1486   1               // B4 (Port 3 Bit 4 Output Mode) = PUSH_PULL (P3.4 output is push-pull.)
1487   1               // B7 (Port 3 Bit 7 Output Mode) = OPEN_DRAIN (P3.7 output is open-
1488   1               //     drain.)
1489   1               */
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 25  

1490   1              SFRPAGE = 0x20;
1491   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
1492   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN
1493   1                              | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B7__OPEN_DRAIN;
1494   1              // [P3MDOUT - Port 3 Output Mode]$
1495   1      
1496   1              // $[P3MDIN - Port 3 Input Mode]
1497   1              // [P3MDIN - Port 3 Input Mode]$
1498   1      
1499   1      }
1500          
1501          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
1502   1              // $[ADC0CN2 - ADC0 Control 2]
1503   1              // [ADC0CN2 - ADC0 Control 2]$
1504   1      
1505   1              // $[ADC0CN1 - ADC0 Control 1]
1506   1              /*
1507   1               // ADBITS (Resolution Control) = 10_BIT (ADC0 operates in 10-bit mode.)
1508   1               // ADSJST (Accumulator Shift and Justify) = RIGHT_NO_SHIFT (Right
1509   1               //     justified. No shifting applied.)
1510   1               // ADRPT (Repeat Count) = ACC_1 (Perform and Accumulate 1 conversion.)
1511   1               */
1512   1              ADC0CN1 = ADC0CN1_ADBITS__10_BIT | ADC0CN1_ADSJST__RIGHT_NO_SHIFT
1513   1                              | ADC0CN1_ADRPT__ACC_1;
1514   1              // [ADC0CN1 - ADC0 Control 1]$
1515   1      
1516   1              // $[ADC0MX - ADC0 Multiplexer Selection]
1517   1              /*
1518   1               // ADC0MX (AMUX0 Positive Input Selection) = ADC0P13 (Select ADC0.13.)
1519   1               */
1520   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
1521   1              // [ADC0MX - ADC0 Multiplexer Selection]$
1522   1      
1523   1              // $[ADC0CF2 - ADC0 Power Control]
1524   1              /*
1525   1               // GNDSL (Analog Ground Reference) = GND_PIN (The ADC0 ground reference
1526   1               //     is the GND pin.)
1527   1               // REFSL (Voltage Reference Select) = VDD_PIN (The ADC0 voltage reference
1528   1               //     is the VDD pin.)
1529   1               // ADPWR (Power Up Delay Time) = 0x03
1530   1               */
1531   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
1532   1                              | (0x03 << ADC0CF2_ADPWR__SHIFT);
1533   1              // [ADC0CF2 - ADC0 Power Control]$
1534   1      
1535   1              // $[ADC0CF0 - ADC0 Configuration]
1536   1              /*
1537   1               // ADCLKSEL (ADC Clock Select) = SYSCLK (ADCCLK = SYSCLK.)
1538   1               // ADSC (SAR Clock Divider) = 0x01
1539   1               */
1540   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
1541   1              // [ADC0CF0 - ADC0 Configuration]$
1542   1      
1543   1              // $[ADC0CF1 - ADC0 Configuration]
1544   1              /*
1545   1               // ADLPM (Low Power Mode Enable) = LP_DISABLED (Disable low power
1546   1               //     mode.)
1547   1               // ADTK (Conversion Tracking Time) = 0x03
1548   1               */
1549   1              ADC0CF1 = ADC0CF1_ADLPM__LP_DISABLED | (0x03 << ADC0CF1_ADTK__SHIFT);
1550   1              // [ADC0CF1 - ADC0 Configuration]$
1551   1      
1552   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 18:53:39 PAGE 26  

1553   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
1554   1      
1555   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
1556   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
1557   1      
1558   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
1559   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
1560   1      
1561   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
1562   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
1563   1      
1564   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
1565   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
1566   1      
1567   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
1568   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
1569   1      
1570   1              // $[ADC0CN0 - ADC0 Control 0]
1571   1              /*
1572   1               // ADEN (ADC Enable) = ENABLED (Enable ADC0 (active and ready for data
1573   1               //     conversions).)
1574   1               // IPOEN (Idle Powered-off Enable) = POWER_DOWN (Power down when ADC is
1575   1               //     idle (not converting).)
1576   1               */
1577   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED | ADC0CN0_IPOEN__POWER_DOWN;
1578   1              // [ADC0CN0 - ADC0 Control 0]$
1579   1      
1580   1      }
1581          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    233    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
