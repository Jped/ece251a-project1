C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\home\daniel\Downloads\SimplicityStudio_v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/
                    -daniel/SimplicityStudio/v4_workspace/EFM8BB3_Blinky_2/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGL
                    -EVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/daniel/SimplicityStudi
                    -o/v4_workspace/EFM8BB3_Blinky_2/inc;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.3//Device/shared
                    -/si8051base;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src/InitD
                    -evice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              CLOCK_0_enter_DefaultMode_from_RESET();
  32   1              TIMER16_2_enter_DefaultMode_from_RESET();
  33   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  34   1              // Restore the SFRPAGE
  35   1              SFRPAGE = SFRPAGE_save;
  36   1              // [Config Calls]$
  37   1      
  38   1      }
  39          
  40          //================================================================================
  41          // WDT_0_enter_DefaultMode_from_RESET
  42          //================================================================================
  43          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  44   1              // $[WDTCN - Watchdog Timer Control]
  45   1              SFRPAGE = 0x00;
  46   1              //Disable Watchdog with key sequence
  47   1              WDTCN = 0xDE; //First key
  48   1              WDTCN = 0xAD; //Second key
  49   1              // [WDTCN - Watchdog Timer Control]$
  50   1      
  51   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 2   

  52          
  53          //================================================================================
  54          // PORTS_0_enter_DefaultMode_from_RESET
  55          //================================================================================
  56          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  57   1              // $[P0 - Port 0 Pin Latch]
  58   1              /*
  59   1               // B0 (Port 0 Bit 0 Latch) = HIGH (P0.0 is high. Set P0.0 to drive or
  60   1               //     float high.)
  61   1               // B1 (Port 0 Bit 1 Latch) = HIGH (P0.1 is high. Set P0.1 to drive or
  62   1               //     float high.)
  63   1               // B2 (Port 0 Bit 2 Latch) = HIGH (P0.2 is high. Set P0.2 to drive or
  64   1               //     float high.)
  65   1               // B3 (Port 0 Bit 3 Latch) = HIGH (P0.3 is high. Set P0.3 to drive or
  66   1               //     float high.)
  67   1               // B4 (Port 0 Bit 4 Latch) = HIGH (P0.4 is high. Set P0.4 to drive or
  68   1               //     float high.)
  69   1               // B5 (Port 0 Bit 5 Latch) = HIGH (P0.5 is high. Set P0.5 to drive or
  70   1               //     float high.)
  71   1               // B6 (Port 0 Bit 6 Latch) = HIGH (P0.6 is high. Set P0.6 to drive or
  72   1               //     float high.)
  73   1               // B7 (Port 0 Bit 7 Latch) = HIGH (P0.7 is high. Set P0.7 to drive or
  74   1               //     float high.)
  75   1               */
  76   1              P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
  77   1                              | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
  78   1              // [P0 - Port 0 Pin Latch]$
  79   1      
  80   1              // $[P0MDOUT - Port 0 Output Mode]
  81   1              /*
  82   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
  83   1               //     drain.)
  84   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
  85   1               //     drain.)
  86   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
  87   1               //     drain.)
  88   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
  89   1               //     drain.)
  90   1               // B4 (Port 0 Bit 4 Output Mode) = OPEN_DRAIN (P0.4 output is open-
  91   1               //     drain.)
  92   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
  93   1               //     drain.)
  94   1               // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
  95   1               //     drain.)
  96   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
  97   1               //     drain.)
  98   1               */
  99   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 100   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 101   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 102   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 103   1              // [P0MDOUT - Port 0 Output Mode]$
 104   1      
 105   1              // $[P0MDIN - Port 0 Input Mode]
 106   1              /*
 107   1               // B0 (Port 0 Bit 0 Input Mode) = DIGITAL (P0.0 pin is configured for
 108   1               //     digital mode.)
 109   1               // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
 110   1               //     digital mode.)
 111   1               // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
 112   1               //     digital mode.)
 113   1               // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
 114   1               //     digital mode.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 3   

 115   1               // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
 116   1               //     digital mode.)
 117   1               // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
 118   1               //     digital mode.)
 119   1               // B6 (Port 0 Bit 6 Input Mode) = DIGITAL (P0.6 pin is configured for
 120   1               //     digital mode.)
 121   1               // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
 122   1               //     digital mode.)
 123   1               */
 124   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 125   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 126   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 127   1              // [P0MDIN - Port 0 Input Mode]$
 128   1      
 129   1              // $[P0SKIP - Port 0 Skip]
 130   1              /*
 131   1               // B0 (Port 0 Bit 0 Skip) = NOT_SKIPPED (P0.0 pin is not skipped by the
 132   1               //     crossbar.)
 133   1               // B1 (Port 0 Bit 1 Skip) = NOT_SKIPPED (P0.1 pin is not skipped by the
 134   1               //     crossbar.)
 135   1               // B2 (Port 0 Bit 2 Skip) = SKIPPED (P0.2 pin is skipped by the
 136   1               //     crossbar.)
 137   1               // B3 (Port 0 Bit 3 Skip) = SKIPPED (P0.3 pin is skipped by the
 138   1               //     crossbar.)
 139   1               // B4 (Port 0 Bit 4 Skip) = NOT_SKIPPED (P0.4 pin is not skipped by the
 140   1               //     crossbar.)
 141   1               // B5 (Port 0 Bit 5 Skip) = NOT_SKIPPED (P0.5 pin is not skipped by the
 142   1               //     crossbar.)
 143   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 144   1               //     crossbar.)
 145   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 146   1               //     crossbar.)
 147   1               */
 148   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__NOT_SKIPPED
 149   1                              | P0SKIP_B2__SKIPPED | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
 150   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__NOT_SKIPPED
 151   1                              | P0SKIP_B7__NOT_SKIPPED;
 152   1              // [P0SKIP - Port 0 Skip]$
 153   1      
 154   1              // $[P0MASK - Port 0 Mask]
 155   1              /*
 156   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 157   1               //     ignored and will not cause a port mismatch event.)
 158   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 159   1               //     ignored and will not cause a port mismatch event.)
 160   1               // B2 (Port 0 Bit 2 Mask Value) = COMPARED (P0.2 pin logic value is
 161   1               //     compared to P0MAT.2.)
 162   1               // B3 (Port 0 Bit 3 Mask Value) = COMPARED (P0.3 pin logic value is
 163   1               //     compared to P0MAT.3.)
 164   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 165   1               //     ignored and will not cause a port mismatch event.)
 166   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 167   1               //     ignored and will not cause a port mismatch event.)
 168   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 169   1               //     ignored and will not cause a port mismatch event.)
 170   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 171   1               //     ignored and will not cause a port mismatch event.)
 172   1               */
 173   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 174   1                              | P0MASK_B3__COMPARED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 175   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 176   1              // [P0MASK - Port 0 Mask]$
 177   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 4   

 178   1              // $[P0MAT - Port 0 Match]
 179   1              /*
 180   1               // B0 (Port 0 Bit 0 Match Value) = HIGH (P0.0 pin logic value is compared
 181   1               //     with logic HIGH.)
 182   1               // B1 (Port 0 Bit 1 Match Value) = HIGH (P0.1 pin logic value is compared
 183   1               //     with logic HIGH.)
 184   1               // B2 (Port 0 Bit 2 Match Value) = HIGH (P0.2 pin logic value is compared
 185   1               //     with logic HIGH.)
 186   1               // B3 (Port 0 Bit 3 Match Value) = HIGH (P0.3 pin logic value is compared
 187   1               //     with logic HIGH.)
 188   1               // B4 (Port 0 Bit 4 Match Value) = HIGH (P0.4 pin logic value is compared
 189   1               //     with logic HIGH.)
 190   1               // B5 (Port 0 Bit 5 Match Value) = HIGH (P0.5 pin logic value is compared
 191   1               //     with logic HIGH.)
 192   1               // B6 (Port 0 Bit 6 Match Value) = HIGH (P0.6 pin logic value is compared
 193   1               //     with logic HIGH.)
 194   1               // B7 (Port 0 Bit 7 Match Value) = HIGH (P0.7 pin logic value is compared
 195   1               //     with logic HIGH.)
 196   1               */
 197   1              P0MAT = P0MAT_B0__HIGH | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
 198   1                              | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
 199   1              // [P0MAT - Port 0 Match]$
 200   1      
 201   1      }
 202          //================================================================================
 203          // PORTS_1_enter_DefaultMode_from_RESET
 204          //================================================================================
 205          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 206   1              // $[P1 - Port 1 Pin Latch]
 207   1              /*
 208   1               // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
 209   1               //     float high.)
 210   1               // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
 211   1               //     float high.)
 212   1               // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
 213   1               //     float high.)
 214   1               // B3 (Port 1 Bit 3 Latch) = HIGH (P1.3 is high. Set P1.3 to drive or
 215   1               //     float high.)
 216   1               // B4 (Port 1 Bit 4 Latch) = HIGH (P1.4 is high. Set P1.4 to drive or
 217   1               //     float high.)
 218   1               // B5 (Port 1 Bit 5 Latch) = HIGH (P1.5 is high. Set P1.5 to drive or
 219   1               //     float high.)
 220   1               // B6 (Port 1 Bit 6 Latch) = HIGH (P1.6 is high. Set P1.6 to drive or
 221   1               //     float high.)
 222   1               // B7 (Port 1 Bit 7 Latch) = HIGH (P1.7 is high. Set P1.7 to drive or
 223   1               //     float high.)
 224   1               */
 225   1              P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
 226   1                              | P1_B5__HIGH | P1_B6__HIGH | P1_B7__HIGH;
 227   1              // [P1 - Port 1 Pin Latch]$
 228   1      
 229   1              // $[P1MDOUT - Port 1 Output Mode]
 230   1              /*
 231   1               // B0 (Port 1 Bit 0 Output Mode) = OPEN_DRAIN (P1.0 output is open-
 232   1               //     drain.)
 233   1               // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
 234   1               //     drain.)
 235   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 236   1               //     drain.)
 237   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 238   1               //     drain.)
 239   1               // B4 (Port 1 Bit 4 Output Mode) = PUSH_PULL (P1.4 output is push-pull.)
 240   1               // B5 (Port 1 Bit 5 Output Mode) = PUSH_PULL (P1.5 output is push-pull.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 5   

 241   1               // B6 (Port 1 Bit 6 Output Mode) = PUSH_PULL (P1.6 output is push-pull.)
 242   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 243   1               //     drain.)
 244   1               */
 245   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 246   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 247   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 248   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 249   1              // [P1MDOUT - Port 1 Output Mode]$
 250   1      
 251   1              // $[P1MDIN - Port 1 Input Mode]
 252   1              /*
 253   1               // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 254   1               //     digital mode.)
 255   1               // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 256   1               //     digital mode.)
 257   1               // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 258   1               //     digital mode.)
 259   1               // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
 260   1               //     digital mode.)
 261   1               // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 262   1               //     digital mode.)
 263   1               // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 264   1               //     digital mode.)
 265   1               // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
 266   1               //     digital mode.)
 267   1               // B7 (Port 1 Bit 7 Input Mode) = DIGITAL (P1.7 pin is configured for
 268   1               //     digital mode.)
 269   1               */
 270   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 271   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 272   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__DIGITAL;
 273   1              // [P1MDIN - Port 1 Input Mode]$
 274   1      
 275   1              // $[P1SKIP - Port 1 Skip]
 276   1              /*
 277   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 278   1               //     crossbar.)
 279   1               // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 280   1               //     crossbar.)
 281   1               // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 282   1               //     crossbar.)
 283   1               // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 284   1               //     crossbar.)
 285   1               // B4 (Port 1 Bit 4 Skip) = SKIPPED (P1.4 pin is skipped by the
 286   1               //     crossbar.)
 287   1               // B5 (Port 1 Bit 5 Skip) = SKIPPED (P1.5 pin is skipped by the
 288   1               //     crossbar.)
 289   1               // B6 (Port 1 Bit 6 Skip) = SKIPPED (P1.6 pin is skipped by the
 290   1               //     crossbar.)
 291   1               // B7 (Port 1 Bit 7 Skip) = NOT_SKIPPED (P1.7 pin is not skipped by the
 292   1               //     crossbar.)
 293   1               */
 294   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 295   1                              | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 296   1                              | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED | P1SKIP_B6__SKIPPED
 297   1                              | P1SKIP_B7__NOT_SKIPPED;
 298   1              // [P1SKIP - Port 1 Skip]$
 299   1      
 300   1              // $[P1MASK - Port 1 Mask]
 301   1              /*
 302   1               // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
 303   1               //     ignored and will not cause a port mismatch event.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 6   

 304   1               // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
 305   1               //     ignored and will not cause a port mismatch event.)
 306   1               // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
 307   1               //     ignored and will not cause a port mismatch event.)
 308   1               // B3 (Port 1 Bit 3 Mask Value) = IGNORED (P1.3 pin logic value is
 309   1               //     ignored and will not cause a port mismatch event.)
 310   1               // B4 (Port 1 Bit 4 Mask Value) = IGNORED (P1.4 pin logic value is
 311   1               //     ignored and will not cause a port mismatch event.)
 312   1               // B5 (Port 1 Bit 5 Mask Value) = IGNORED (P1.5 pin logic value is
 313   1               //     ignored and will not cause a port mismatch event.)
 314   1               // B6 (Port 1 Bit 6 Mask Value) = IGNORED (P1.6 pin logic value is
 315   1               //     ignored and will not cause a port mismatch event.)
 316   1               // B7 (Port 1 Bit 7 Mask Value) = IGNORED (P1.7 pin logic value is
 317   1               //     ignored and will not cause a port mismatch event.)
 318   1               */
 319   1              P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED
 320   1                              | P1MASK_B3__IGNORED | P1MASK_B4__IGNORED | P1MASK_B5__IGNORED
 321   1                              | P1MASK_B6__IGNORED | P1MASK_B7__IGNORED;
 322   1              // [P1MASK - Port 1 Mask]$
 323   1      
 324   1              // $[P1MAT - Port 1 Match]
 325   1              /*
 326   1               // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
 327   1               //     with logic HIGH.)
 328   1               // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
 329   1               //     with logic HIGH.)
 330   1               // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
 331   1               //     with logic HIGH.)
 332   1               // B3 (Port 1 Bit 3 Match Value) = HIGH (P1.3 pin logic value is compared
 333   1               //     with logic HIGH.)
 334   1               // B4 (Port 1 Bit 4 Match Value) = HIGH (P1.4 pin logic value is compared
 335   1               //     with logic HIGH.)
 336   1               // B5 (Port 1 Bit 5 Match Value) = HIGH (P1.5 pin logic value is compared
 337   1               //     with logic HIGH.)
 338   1               // B6 (Port 1 Bit 6 Match Value) = HIGH (P1.6 pin logic value is compared
 339   1               //     with logic HIGH.)
 340   1               // B7 (Port 1 Bit 7 Match Value) = HIGH (P1.7 pin logic value is compared
 341   1               //     with logic HIGH.)
 342   1               */
 343   1              P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
 344   1                              | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH | P1MAT_B7__HIGH;
 345   1              // [P1MAT - Port 1 Match]$
 346   1      
 347   1      }
 348          
 349          
 350          //================================================================================
 351          // PORTS_2_enter_DefaultMode_from_RESET
 352          //================================================================================
 353          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 354   1              // $[P2 - Port 2 Pin Latch]
 355   1              // [P2 - Port 2 Pin Latch]$
 356   1      
 357   1              // $[P2MDOUT - Port 2 Output Mode]
 358   1              /*
 359   1               // B0 (Port 2 Bit 0 Output Mode) = OPEN_DRAIN (P2.0 output is open-
 360   1               //     drain.)
 361   1               // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 362   1               //     drain.)
 363   1               // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
 364   1               //     drain.)
 365   1               // B3 (Port 2 Bit 3 Output Mode) = PUSH_PULL (P2.3 output is push-pull.)
 366   1               // B4 (Port 2 Bit 4 Output Mode) = OPEN_DRAIN (P2.4 output is open-
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 7   

 367   1               //     drain.)
 368   1               // B5 (Port 2 Bit 5 Output Mode) = OPEN_DRAIN (P2.5 output is open-
 369   1               //     drain.)
 370   1               // B6 (Port 2 Bit 6 Output Mode) = OPEN_DRAIN (P2.6 output is open-
 371   1               //     drain.)
 372   1               */
 373   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 374   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 375   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 376   1                              | P2MDOUT_B6__OPEN_DRAIN;
 377   1              // [P2MDOUT - Port 2 Output Mode]$
 378   1      
 379   1              // $[P2MDIN - Port 2 Input Mode]
 380   1              // [P2MDIN - Port 2 Input Mode]$
 381   1      
 382   1              // $[P2SKIP - Port 2 Skip]
 383   1              /*
 384   1               // B0 (Port 2 Bit 0 Skip) = NOT_SKIPPED (P2.0 pin is not skipped by the
 385   1               //     crossbar.)
 386   1               // B1 (Port 2 Bit 1 Skip) = NOT_SKIPPED (P2.1 pin is not skipped by the
 387   1               //     crossbar.)
 388   1               // B2 (Port 2 Bit 2 Skip) = NOT_SKIPPED (P2.2 pin is not skipped by the
 389   1               //     crossbar.)
 390   1               // B3 (Port 2 Bit 3 Skip) = SKIPPED (P2.3 pin is skipped by the
 391   1               //     crossbar.)
 392   1               */
 393   1              SFRPAGE = 0x20;
 394   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 395   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 396   1              // [P2SKIP - Port 2 Skip]$
 397   1      
 398   1              // $[P2MASK - Port 2 Mask]
 399   1              // [P2MASK - Port 2 Mask]$
 400   1      
 401   1              // $[P2MAT - Port 2 Match]
 402   1              // [P2MAT - Port 2 Match]$
 403   1      
 404   1      }
 405          
 406          //================================================================================
 407          // PBCFG_0_enter_DefaultMode_from_RESET
 408          //================================================================================
 409          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 410   1              // $[XBR2 - Port I/O Crossbar 2]
 411   1              /*
 412   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 413   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 414   1               //     mode).)
 415   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 416   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 417   1               //     pin.)
 418   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 419   1               //     at Port pin.)
 420   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 421   1               //     at Port pin.)
 422   1               */
 423   1              SFRPAGE = 0x00;
 424   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 425   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 426   1                              | XBR2_URT1CTSE__DISABLED;
 427   1              // [XBR2 - Port I/O Crossbar 2]$
 428   1      
 429   1              // $[PRTDRV - Port Drive Strength]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 8   

 430   1              // [PRTDRV - Port Drive Strength]$
 431   1      
 432   1              // $[XBR0 - Port I/O Crossbar 0]
 433   1              // [XBR0 - Port I/O Crossbar 0]$
 434   1      
 435   1              // $[XBR1 - Port I/O Crossbar 1]
 436   1              // [XBR1 - Port I/O Crossbar 1]$
 437   1      
 438   1      }
 439          
 440          //================================================================================
 441          // CLOCK_0_enter_DefaultMode_from_RESET
 442          //================================================================================
 443          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 444   1              // $[HFOSC1 Setup]
 445   1              // [HFOSC1 Setup]$
 446   1      
 447   1              // $[CLKSEL - Clock Select]
 448   1              /*
 449   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 450   1               //     High Frequency Oscillator 0.)
 451   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 452   1               //     selected clock source divided by 1.)
 453   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 454   1               //     High Frequency Oscillator 0.)
 455   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 456   1               //     selected clock source divided by 1.)
 457   1               */
 458   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 459   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 460   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 461   1                      ;
 462   1              // [CLKSEL - Clock Select]$
 463   1      
 464   1      }
 465          
 466          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 467   1              // $[CKCON0 - Clock Control 0]
 468   1              /*
 469   1               // SCA (Timer 0/1 Prescale) = SYSCLK_DIV_12 (System clock divided by 12.)
 470   1               // T0M (Timer 0 Clock Select) = PRESCALE (Counter/Timer 0 uses the clock
 471   1               //     defined by the prescale field, SCA.)
 472   1               // T2MH (Timer 2 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 high
 473   1               //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 474   1               // T2ML (Timer 2 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 low
 475   1               //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 476   1               // T3MH (Timer 3 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 high
 477   1               //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 478   1               // T3ML (Timer 3 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 low
 479   1               //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 480   1               // T1M (Timer 1 Clock Select) = SYSCLK (Timer 1 uses the system clock.)
 481   1               */
 482   1              SFRPAGE = 0x00;
 483   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 484   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 485   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 486   1                              | CKCON0_T1M__SYSCLK;
 487   1              // [CKCON0 - Clock Control 0]$
 488   1      
 489   1              // $[CKCON1 - Clock Control 1]
 490   1              // [CKCON1 - Clock Control 1]$
 491   1      
 492   1              // $[TMOD - Timer 0/1 Mode]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 9   

 493   1              /*
 494   1               // T0M (Timer 0 Mode Select) = MODE0 (Mode 0, 13-bit Counter/Timer)
 495   1               // T1M (Timer 1 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 496   1               //     Auto-Reload)
 497   1               // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 498   1               //     on the clock defined by T0M in the CKCON0 register.)
 499   1               // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 500   1               //     irrespective of INT0 logic level.)
 501   1               // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
 502   1               //     on the clock defined by T1M in the CKCON0 register.)
 503   1               // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 504   1               //     irrespective of INT1 logic level.)
 505   1               */
 506   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 507   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 508   1              // [TMOD - Timer 0/1 Mode]$
 509   1      
 510   1              // $[TCON - Timer 0/1 Control]
 511   1              /*
 512   1               // TR1 (Timer 1 Run Control) = RUN (Start Timer 1 running.)
 513   1               */
 514   1              TCON |= TCON_TR1__RUN;
 515   1              // [TCON - Timer 0/1 Control]$
 516   1      
 517   1      }
 518          
 519          //================================================================================
 520          // INTERRUPT_0_enter_DefaultMode_from_RESET
 521          //================================================================================
 522          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 523   1              // $[EIE1 - Extended Interrupt Enable 1]
 524   1              /*
 525   1               // EADC0 (ADC0 Conversion Complete Interrupt Enable) = DISABLED (Disable
 526   1               //     ADC0 Conversion Complete interrupt.)
 527   1               // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
 528   1               //     ADC0 Window Comparison interrupt.)
 529   1               // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 530   1               //     interrupts.)
 531   1               // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 532   1               //     interrupts.)
 533   1               // EMAT (Port Match Interrupts Enable) = ENABLED (Enable interrupt
 534   1               //     requests generated by a Port Match.)
 535   1               // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 536   1               //     (Disable all PCA0 interrupts.)
 537   1               // ESMB0 (SMBus (SMB0) Interrupt Enable) = DISABLED (Disable all SMB0
 538   1               //     interrupts.)
 539   1               // ET3 (Timer 3 Interrupt Enable) = DISABLED (Disable Timer 3
 540   1               //     interrupts.)
 541   1               */
 542   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 543   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 544   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 545   1              // [EIE1 - Extended Interrupt Enable 1]$
 546   1      
 547   1              // $[EIE2 - Extended Interrupt Enable 2]
 548   1              // [EIE2 - Extended Interrupt Enable 2]$
 549   1      
 550   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 551   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 552   1      
 553   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 554   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 555   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 10  

 556   1              // $[EIP2 - Extended Interrupt Priority 2]
 557   1              // [EIP2 - Extended Interrupt Priority 2]$
 558   1      
 559   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 560   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 561   1      
 562   1              // $[IE - Interrupt Enable]
 563   1              // [IE - Interrupt Enable]$
 564   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 565   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 566   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 567   1      
 568   1              // $[IP - Interrupt Priority]
 569   1              // [IP - Interrupt Priority]$
 570   1      
 571   1              // $[IPH - Interrupt Priority High]
 572   1              // [IPH - Interrupt Priority High]$
 573   1      
 574   1      }
 575          
 576          //================================================================================
 577          // TIMER16_2_enter_DefaultMode_from_RESET
 578          //================================================================================
 579          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 580   1              // $[Timer Initialization]
 581   1              // Save Timer Configuration
 582   1              uint8_t TMR2CN0_TR2_save;
 583   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 584   1              // Stop Timer
 585   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 586   1              // [Timer Initialization]$
 587   1      
 588   1              // $[TMR2CN1 - Timer 2 Control 1]
 589   1              // [TMR2CN1 - Timer 2 Control 1]$
 590   1      
 591   1              // $[TMR2CN0 - Timer 2 Control]
 592   1              // [TMR2CN0 - Timer 2 Control]$
 593   1      
 594   1              // $[TMR2H - Timer 2 High Byte]
 595   1              // [TMR2H - Timer 2 High Byte]$
 596   1      
 597   1              // $[TMR2L - Timer 2 Low Byte]
 598   1              // [TMR2L - Timer 2 Low Byte]$
 599   1      
 600   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 601   1              /*
 602   1               // TMR2RLH (Timer 2 Reload High Byte) = 0x38
 603   1               */
 604   1              TMR2RLH = (0x38 << TMR2RLH_TMR2RLH__SHIFT);
 605   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 606   1      
 607   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 608   1              /*
 609   1               // TMR2RLL (Timer 2 Reload Low Byte) = 0x9E
 610   1               */
 611   1              TMR2RLL = (0x9E << TMR2RLL_TMR2RLL__SHIFT);
 612   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 613   1      
 614   1              // $[TMR2CN0]
 615   1              /*
 616   1               // TR2 (Timer 2 Run Control) = RUN (Start Timer 2 running.)
 617   1               */
 618   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 16:12:42 PAGE 11  

 619   1              // [TMR2CN0]$
 620   1      
 621   1              // $[Timer Restoration]
 622   1              // Restore Timer Configuration
 623   1              TMR2CN0 |= TMR2CN0_TR2_save;
 624   1              // [Timer Restoration]$
 625   1      
 626   1      }
 627          
 628          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    141    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
