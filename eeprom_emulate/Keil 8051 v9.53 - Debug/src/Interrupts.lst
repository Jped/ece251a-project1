C51 COMPILER V9.53.0.0   INTERRUPTS                                                        03/26/2017 13:32:14 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INTERRUPTS
OBJECT MODULE PLACED IN .\src/Interrupts.OBJ
COMPILER INVOKED BY: Z:\home\daniel\Downloads\SimplicityStudio_v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/
                    -daniel/SimplicityStudio/v4_workspace/EFM8BB3_Blinky_2/src/Interrupts.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGL
                    -EVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/daniel/SimplicityStudi
                    -o/v4_workspace/EFM8BB3_Blinky_2/inc;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.3//Device/shared
                    -/si8051base;/home/daniel/Downloads/SimplicityStudio_v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src/Inter
                    -rupts.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/Interrupts.OBJ)

line level    source

   1          //=========================================================
   2          // src/Interrupts.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9                   
  10          // USER INCLUDES                        
  11          #include <SI_EFM8BB3_Register_Enums.h>
  12          
  13          //-----------------------------------------------------------------------------
  14          // Global VARIABLES
  15          //-----------------------------------------------------------------------------
  16          int LEDCOUNT = 0;
  17          int maxLen=10;
  18          int commands[8][6]={  //opcode, opcode, digit, digit, digit, digit
  19                             {1,1,0,0,0,0},
  20                             {0,1,0,0,0,1},
  21                             {0,1,0,0,1,1},
  22                             {0,1,0,0,0,1},
  23                             {0,0,0,1,0,0},
  24                             {1,0,0,0,0,1},
  25                             {1,1,0,0,0,0},
  26                             {1,1,0,0,0,0}
  27                          };
  28          int PC          =       0;
  29          //-----------------------------------------------------------------------------
  30          // Global CONSTANTS
  31          //-----------------------------------------------------------------------------
  32          //SI_SBIT(LED0, SFR_P1, 7);                  // P1.4 LED0
  33          //SI_SBIT(LED1, SFR_P1, 5);                  // P1.5 LED1
  34          //SI_SBIT(LED2, SFR_P1, 6);                  // P1.6 LED2
  35          
  36          //-----------------------------------------------------------------------------
  37          // TIMER2_ISR
  38          //-----------------------------------------------------------------------------
  39          //
  40          // TIMER2 ISR Content goes here. Remember to clear flag bits:
  41          // TMR2CN::TF2H (Timer # High Byte Overflow Flag)
  42          // TMR2CN::TF2L (Timer # Low Byte Overflow Flag)
  43          //
  44          // This routine changes the state of the LED whenever Timer2 overflows.
  45          //
  46          //-----------------------------------------------------------------------------
  47          
  48          
  49          SI_INTERRUPT (TIMER2_ISR, TIMER2_IRQn)
  50          {
  51   1      
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        03/26/2017 13:32:14 PAGE 2   

  52   1      
  53   1              TMR2CN0_TF2H = 0;                  // Clear Timer2 interrupt flag
  54   1              if (LEDCOUNT==0){
  55   2                      P0_B7=0;
  56   2                      if (PC<=7){
  57   3                              P0_B0=commands[PC][0];
  58   3                          P0_B1=commands[PC][1];
  59   3                              P0_B2=commands[PC][2];
  60   3                          P0_B3=commands[PC][3];
  61   3                          P0_B4=commands[PC][4];
  62   3                              P0_B6=commands[PC][5];
  63   3                              PC++;
  64   3                      }
  65   2              }
  66   1              else if (LEDCOUNT==maxLen/2){
  67   2                      P0_B7=1;
  68   2              }
  69   1      
  70   1              if (LEDCOUNT>maxLen){
  71   2                      LEDCOUNT=0;
  72   2              }
  73   1              else {
  74   2                      LEDCOUNT++;
  75   2              }
  76   1      
  77   1      //      switch (LEDCOUNT)
  78   1      //      {
  79   1      //              case 0:
  80   1      //                 P0_B7=0;
  81   1      //                 break;
  82   1      //              case maxLen/2:
  83   1      //                 P0_B7 = 1;
  84   1      //                 break;
  85   1      //      }
  86   1      //
  87   1      //      if (LEDCOUNT <= maxLen) LEDCOUNT++;
  88   1      //      else LEDCOUNT = 0;
  89   1      }
  90          
  91          SI_INTERRUPT (PMATCH_ISR, PMATCH_IRQn){
  92   1      
  93   1              if (P0_B2==0){
  94   2                      maxLen+=2;
  95   2                      if (maxLen>160){
  96   3                              maxLen=160;
  97   3                      }
  98   2              }
  99   1              if (P0_B3==0){
 100   2                      maxLen-=2;
 101   2                      if (maxLen<0){
 102   3                              maxLen=0;
 103   3                      }
 104   2              }
 105   1              SFRPAGE=LEGACY_PAGE;
 106   1              EIE1 &= ~0x02;
 107   1      }
 108          
 109          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    315    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        03/26/2017 13:32:14 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    102    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
